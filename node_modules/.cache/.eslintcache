[{"C:\\Users\\lenovo\\letterBox\\src\\index.tsx":"1","C:\\Users\\lenovo\\letterBox\\src\\reportWebVitals.ts":"2","C:\\Users\\lenovo\\letterBox\\src\\serviceWorkerRegistration.ts":"3","C:\\Users\\lenovo\\letterBox\\src\\App.jsx":"4","C:\\Users\\lenovo\\letterBox\\src\\pages\\Tab3.jsx":"5","C:\\Users\\lenovo\\letterBox\\src\\components\\ExploreContainer.tsx":"6","C:\\Users\\lenovo\\letterBox\\src\\initialState.jsx":"7","C:\\Users\\lenovo\\letterBox\\src\\pages\\LoginPage.jsx":"8","C:\\Users\\lenovo\\letterBox\\src\\Firestore.js":"9","C:\\Users\\lenovo\\letterBox\\src\\pages\\SignIn.jsx":"10","C:\\Users\\lenovo\\letterBox\\src\\AllUsers.js":"11","C:\\Users\\lenovo\\letterBox\\src\\pages\\ChatPage.jsx":"12","C:\\Users\\lenovo\\letterBox\\src\\pages\\ChatItem.jsx":"13","C:\\Users\\lenovo\\letterBox\\src\\pages\\SmallComponents\\Chats.jsx":"14","C:\\Users\\lenovo\\letterBox\\src\\pages\\AllUsers.jsx":"15","C:\\Users\\lenovo\\letterBox\\src\\pages\\Contacts.jsx":"16"},{"size":910,"mtime":1629473257893,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1628621557000,"results":"19","hashOfConfig":"18"},{"size":5256,"mtime":1628621557000,"results":"20","hashOfConfig":"18"},{"size":2298,"mtime":1633670262139,"results":"21","hashOfConfig":"18"},{"size":635,"mtime":1629408158376,"results":"22","hashOfConfig":"18"},{"size":407,"mtime":1628621557000,"results":"23","hashOfConfig":"18"},{"size":1503,"mtime":1633500674834,"results":"24","hashOfConfig":"18"},{"size":5393,"mtime":1633670219466,"results":"25","hashOfConfig":"18"},{"size":560,"mtime":1629476281197,"results":"26","hashOfConfig":"18"},{"size":761,"mtime":1629477710515,"results":"27","hashOfConfig":"18"},{"size":357,"mtime":1629665501358,"results":"28","hashOfConfig":"18"},{"size":3612,"mtime":1633513964752,"results":"29","hashOfConfig":"18"},{"size":2439,"mtime":1633500961075,"results":"30","hashOfConfig":"18"},{"size":1039,"mtime":1632974727597,"results":"31","hashOfConfig":"18"},{"size":1503,"mtime":1633500749395,"results":"32","hashOfConfig":"18"},{"size":872,"mtime":1633670085894,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"103ets6",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},"C:\\Users\\lenovo\\letterBox\\src\\index.tsx",[],["78","79"],"C:\\Users\\lenovo\\letterBox\\src\\reportWebVitals.ts",[],"C:\\Users\\lenovo\\letterBox\\src\\serviceWorkerRegistration.ts",[],"C:\\Users\\lenovo\\letterBox\\src\\App.jsx",["80","81","82"],"import { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { ellipse, square, triangle, videocam } from 'ionicons/icons';\n\nimport Tab1 from './pages/Contacts';\nimport Tab2 from './pages/AllUsers';\n\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport { AppContext } from \"./initialState\";\nimport { useContext } from 'react';\nimport LoginForm from './pages/LoginPage';\nimport ChatPage from './pages/ChatPage';\n\n\n\nfunction App() {\n\n  let { state, dispatch } = useContext(AppContext);\n\n\n  function Router() {\n\n    return (\n      <IonReactRouter>\n        <IonTabs>\n          <IonRouterOutlet>\n            <Route exact path=\"/tab1\">\n              <Tab1 />\n            </Route>\n            <Route exact path=\"/tab2\">\n              <Tab2 />\n            </Route>\n            <Route exact path=\"/chatpage\">\n              <ChatPage />\n            </Route>\n\n            <Route exact path=\"/\">\n              <Redirect to=\"/tab2\" />\n\n            </Route>\n          </IonRouterOutlet>\n          {state.tabs ? <IonTabBar slot=\"bottom\">\n            <IonTabButton tab=\"tab1\" href=\"/tab1\">\n              <IonIcon icon={triangle} />\n              <IonLabel>Contacts</IonLabel>\n            </IonTabButton>\n            <IonTabButton tab=\"tab2\" href=\"/tab2\">\n              <IonIcon icon={ellipse} />\n              <IonLabel>All Users</IonLabel> </IonTabButton> </IonTabBar> : <IonTabBar />}\n\n\n\n\n        </IonTabs>\n      </IonReactRouter>)\n  }\n\n  ;\n  return (<IonApp>\n    {state.user ? <Router /> : <LoginForm />}\n\n  </IonApp>);\n}\n\n\nexport default App;\n","C:\\Users\\lenovo\\letterBox\\src\\pages\\Tab3.jsx",[],["83","84"],"C:\\Users\\lenovo\\letterBox\\src\\components\\ExploreContainer.tsx",[],"C:\\Users\\lenovo\\letterBox\\src\\initialState.jsx",["85"],"import { act } from '@testing-library/react';\r\nimport React from 'react';\r\nimport { useReducer, createContext } from \"react\";\r\n\r\nlet AppContext = createContext({});\r\n\r\n\r\nconst intialState = {\r\n    appName: \"letterBox\",\r\n    user: JSON.parse(localStorage.getItem(\"user-details\")),\r\n    chattingWith: {\r\n        name: \"\",\r\n        phone: \"\"\r\n    },\r\n    tabs: true\r\n\r\n\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"setAppName\":\r\n\r\n            return { ...state, appName: action.payload };\r\n\r\n        case \"LoginUser\":\r\n            var userInfo = action.payload;\r\n            localStorage.setItem(\"user-details\", JSON.stringify(userInfo));\r\n            return {\r\n                ...state, user: userInfo\r\n            };\r\n\r\n        case \"ChatStarted\":\r\n            return {\r\n                ...state, chattingWith: {\r\n                    name: action.payload[0],\r\n                    phone: action.payload[1]\r\n                }\r\n            };\r\n        case \"Tabs\":\r\n            return {\r\n                ...state,\r\n                tabs: action.payload\r\n            };\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n};\r\n\r\nfunction AppContextProvider(props) {\r\n    var AppState = {\r\n        ...intialState\r\n    };\r\n    let [state, dispatch] = useReducer(reducer, AppState);\r\n    let value = { state, dispatch };\r\n    return (\r\n        <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\r\n    );\r\n};\r\nexport { AppContext, AppContextProvider };","C:\\Users\\lenovo\\letterBox\\src\\pages\\LoginPage.jsx",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useContext, useState } from 'react';\r\nimport './LoginPage.css';\r\nimport { IonPage, IonHeader, IonContent, IonTitle, IonButton, IonLoading, IonInput } from \"@ionic/react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Tab2 from './AllUsers';\r\nimport db from \"../Firestore\";\r\nimport { loadPartialConfigAsync } from '@babel/core';\r\nimport signIn from './SignIn';\r\nimport { AppContext } from \"../initialState\"\r\nimport { alertCircleSharp } from 'ionicons/icons';\r\n\r\nfunction LoginForm() {\r\n    let [showLoading, setShowLoading] = useState(false);\r\n    let { state, dispatch } = useContext(AppContext);\r\n\r\n    let [name, setName] = useState(\"\");\r\n    let [phoneNumber, setNumber] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n\r\n    const login = async () => {\r\n        if (name == \"\" || password == \"\" || phoneNumber == \"\") {\r\n            alert(\"Please Fill in all the details\");\r\n        }\r\n        else {\r\n            //Show Progresss\r\n            setShowLoading(true);\r\n            //Check the <inputsssss className=\"\"></inputsssss>\r\n            let user;\r\n            //alert(password);\r\n            var ids;\r\n            let user_exists = true;\r\n            let user_id = await db.collection(\"users\").doc(phoneNumber.toString()).get().\r\n                then((doc) => {\r\n                    if (!doc.exists) {\r\n                        alert(\"Account Doesnt Exist!, Press Sign In Button to make a new Account.\");\r\n                        setShowLoading(false);\r\n                        user_exists = false;\r\n                    }\r\n\r\n                    else {\r\n                        if (!(password.toString() == doc.data()['password'])) {\r\n                            alert(\"Incorrect Password,Please Try Again.\");\r\n                            setShowLoading(false);\r\n                        }\r\n                        else {\r\n                            //alert(\"Welcome\");\r\n                            user = doc.data();\r\n                            alert(\"Welcome \" + user.name);\r\n                            var action = {\r\n                                type: \"LoginUser\"\r\n                                , payload: user\r\n                            };\r\n                            dispatch(action);\r\n                            setShowLoading(false);\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                });\r\n            if (!user_exists) {\r\n\r\n\r\n                return;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const signIn = async () => {\r\n        setShowLoading(true);\r\n        var user_details = {\r\n            name: name.toString(),\r\n            contact: [],\r\n            password: password.toString(),\r\n            phone: phoneNumber.toString()\r\n\r\n        };\r\n        db.collection(\"users\").doc(phoneNumber.toString()).get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    alert(\"Account Already Exists!, Logging In...\");\r\n                    if (doc.data()['password'] == password.toString()) {\r\n                        alert(\"Welcome\" + name.toString());\r\n                        setShowLoading(false);\r\n                        var action = {\r\n                            type: \"LoginUser\"\r\n                            , payload: user_details\r\n                        };\r\n                        dispatch(state, action);\r\n                        setShowLoading(false);\r\n                    }\r\n                    else {\r\n                        alert(\"Invalid Password!\");\r\n                        setShowLoading(false);\r\n\r\n                    }\r\n                }\r\n                else {\r\n\r\n\r\n                    db.collection(\"users\").doc(phoneNumber.toString()).set(\r\n                        user_details\r\n                    )\r\n                        .then(() => {\r\n                            alert(\"Welcome!!!\");\r\n                            setShowLoading(false);\r\n                            var action = {\r\n                                type: \"LoginUser\"\r\n                                , payload: user_details\r\n                            };\r\n                            dispatch(action);\r\n                            setShowLoading(false);\r\n                        });\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    var login_form = (\r\n        <IonPage>\r\n            <IonHeader><IonTitle>letterBox  <h2>Log In</h2></IonTitle></IonHeader>\r\n            <IonContent>\r\n\r\n                <IonInput placeholder=\"Name  (Only If you are signing In)\" onIonChange={(e) => { setName(e.target.value) }} type=\"text\"></IonInput>\r\n                <IonInput placeholder=\"Phone Number\" onIonChange={(e) => { setNumber(e.target.value) }} type=\"tel\"></IonInput>\r\n                <IonInput placeholder=\"Password\" onIonChange={(e) => { setPassword(e.target.value) }} type=\"password\"></IonInput>\r\n\r\n                <IonButton onClick={(e) => { login() }}>Login</IonButton>\r\n                <IonButton onClick={(e) => { signIn() }}>Sign In</IonButton>\r\n                <IonLoading\r\n\r\n                    isOpen={showLoading}\r\n                    onDidDismiss={() => setShowLoading(false)}\r\n                    message={'Please wait...'}\r\n\r\n                />\r\n\r\n\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n    return login_form;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\lenovo\\letterBox\\src\\Firestore.js",[],["102","103"],"C:\\Users\\lenovo\\letterBox\\src\\pages\\SignIn.jsx",["104","105","106"],"import React from 'react';\r\nimport \"./LoginPage.css\";\r\nimport { useState } from 'react';\r\n\r\n\r\nconst SignIn = () => {\r\n    let [name, setName] = useState(\"\");\r\n    let [phoneNumber, setNumber] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n\r\n    var signInForm = (<form>\r\n        <input className=\"input-style\" placeholder=\"Name\" type=\"text\" onChange={(e) => { setName(e.target.value) }}\r\n        /><br></br>\r\n        <input className=\"input-style\" placeholder=\"Phone\" type=\"tel\" maxLength=\"10\" onChange={(e) => { setPassword(e.target.value) }} />\r\n        <input className=\"input-style\" placeholder=\"Passcode\" type=\"password\" onChange={(e) => { setNumber(e.target.value) }} />\r\n    </form>);\r\n    return signInForm;\r\n}\r\nexport default SignIn;","C:\\Users\\lenovo\\letterBox\\src\\AllUsers.js",["107","108"],"C:\\Users\\lenovo\\letterBox\\src\\pages\\ChatPage.jsx",["109","110","111","112","113","114","115"],"import React, { useContext, useEffect, useRef } from \"react\";\r\nimport { AppContext } from \"../initialState\";\r\nimport { useState } from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport { IonContent, IonFooter, IonGrid, IonHeader, IonPage, IonRow, IonToolbar, IonCol, IonInput, IonButton, useIonViewDidEnter, useIonViewWillEnter, useIonViewWillLeave } from \"@ionic/react\";\r\nimport db from \"../Firestore\";\r\nimport './styles.css';\r\nimport Chats from \"./SmallComponents/Chats\";\r\nimport * as Scroll from \"react-scroll\";\r\n\r\n\r\n\r\n\r\n\r\nconst ChatPage = () => {\r\n    let { state, dispatch } = useContext(AppContext);\r\n    let [message, setMessage] = useState(\"\");\r\n    let [allmsgs, msgsRecieved] = useState(false);\r\n    let [messages = [], setChatMessages] = useState();\r\n    let v = useRef(null);\r\n\r\n\r\n\r\n    let channel = state.user['phone'] + \"/\" + state.chattingWith.phone;\r\n    const sendMessage = async () => {\r\n        let d = new Date();\r\n        let utc = d.toUTCString();\r\n        let now = Date.now();\r\n\r\n        let message_body = {\r\n            content: message,\r\n            channel: channel,\r\n            dateTime: now,\r\n            participants: [state.user['phone'], state.chattingWith.phone],\r\n            id: channel + utc + now\r\n        };\r\n        if (message) {\r\n\r\n\r\n\r\n            let k = await db.collection(\"messages\").add(message_body).then(() => {\r\n                // alert(\"message sent!!\");\r\n                setMessage(\"\");\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n\r\n\r\n        }\r\n        else {\r\n            alert(\"Cannot Send Empty messages!\");\r\n        }\r\n\r\n        //scrollToBottom();\r\n\r\n\r\n    }\r\n    const pressEnter = (e) => {\r\n\r\n        if (e.keyCode == 13) {\r\n            sendMessage();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useIonViewDidEnter(async () => {\r\n\r\n        let k = await db.collection(\"messages\").where(\"channel\", \"in\", [channel, channel.split(\"/\").reverse().join(\"/\")])\r\n            .orderBy(\"dateTime\").limit(100).onSnapshot((querySnapshot) => {\r\n                let mess = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    mess.push(doc.data());\r\n                    //alert(mess.length);\r\n\r\n                });\r\n                setChatMessages(mess);\r\n                mess = [];\r\n                msgsRecieved(true);\r\n            });\r\n\r\n        //setChatMessages(mess);\r\n\r\n        //alert(allmsgs);\r\n\r\n        //alert(messages);\r\n        //alert(mess);\r\n\r\n    })\r\n\r\n    useIonViewWillLeave(() => {\r\n        v = null;\r\n        msgsRecieved(false);\r\n        var action = {\r\n            type: \"Tabs\",\r\n            payload: true\r\n        };\r\n        dispatch(action);\r\n    })\r\n\r\n\r\n\r\n    return (<IonPage>\r\n        <IonHeader>{state.chattingWith.name}</IonHeader>\r\n        <IonContent>\r\n\r\n            {allmsgs ? <Chats messages={messages} /> : <p>Loading Messages...</p>}\r\n\r\n\r\n        </IonContent>\r\n\r\n        <IonFooter>\r\n            <IonToolbar>\r\n                <IonGrid>\r\n                    <IonRow>\r\n                        <IonCol size=\"11\" >\r\n\r\n                            <IonInput value={message} placeholder=\"Pour Your Heart Out..\" onIonChange={(e) => { setMessage(e.target.value) }} id=\"msgInput\" onKeyUp={e => pressEnter(e)}></IonInput>\r\n                        </IonCol>\r\n                        <IonCol >\r\n\r\n                            <IonButton size=\"2\" onClick={(e) => { sendMessage() }} >Send</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n            </IonToolbar>\r\n\r\n        </IonFooter>\r\n\r\n    </IonPage>\r\n    );\r\n}\r\n\r\nexport default ChatPage;","C:\\Users\\lenovo\\letterBox\\src\\pages\\ChatItem.jsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {\r\n    IonList, IonItem, IonLabel, IonInput, IonToggle, IonRadio, IonCheckbox, IonItemSliding,\r\n    IonItemOption, IonItemOptions, IonContent, IonPage, IonAvatar, IonButton, useIonViewWillEnter, useIonViewDidLeave\r\n} from '@ionic/react';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { AppContext } from \"../initialState\";\r\nimport \"../pages/button.css\";\r\nimport db from '../Firestore';\r\n\r\nconst ChatItem = ({ user }) => {\r\n\r\n    let history = useHistory();\r\n    let { state, dispatch } = useContext(AppContext);\r\n    let [lastmsg, setLastmsg] = useState();\r\n    // let k = useRef(null);\r\n    //alert(\"Start channeling\");\r\n    function OpenChatPage() {\r\n\r\n\r\n        var action = {\r\n            type: \"ChatStarted\",\r\n            payload: user\r\n        };\r\n        // setLastmsg(\"Lol\");\r\n        dispatch(action);\r\n        var action2 = {\r\n            type: \"Tabs\",\r\n            payload: false\r\n        };\r\n        dispatch(action2);\r\n        history.push({ pathname: '/chatpage' });\r\n\r\n\r\n    };\r\n    useEffect(() => {\r\n        //console.log(\"Start\")\r\n        let channel1 = state.user.phone + \"/\" + user[1];\r\n        //alert(channel1);\r\n        let channel2 = user[1] + \"/\" + state.user.phone;\r\n        //alert(\"Here\");\r\n        let k = db.collection(\"messages\").where(\"channel\", \"in\", [channel1, channel2])\r\n            .orderBy(\"dateTime\", \"desc\").limit(1).onSnapshot((querySnapshot) => {\r\n                let last = \"\";\r\n                // console.log(\"Cool\");\r\n                querySnapshot.forEach((doc) => {\r\n\r\n                    last = doc.data()['content'];\r\n                    setLastmsg(last);\r\n\r\n\r\n                });\r\n\r\n                //alert(last);\r\n                last = \"\";\r\n            });\r\n\r\n    }, [lastmsg]);\r\n    useIonViewDidLeave(() => {\r\n        // k = null;\r\n    });\r\n\r\n\r\n    return (<div>\r\n        <IonItem  >\r\n\r\n            <IonAvatar slot=\"start\">\r\n                <img src=\"./avatar-han.png\"></img>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n                <h2><strong>{user[0]}</strong></h2>\r\n                <h3>{user[1]}</h3>\r\n                <p> {lastmsg || \"Click Here to Talk to this fella.\"}</p>\r\n                <button onClick={(e) => { OpenChatPage() }} className=\"button-style\"> Talk </button>\r\n            </IonLabel>\r\n\r\n\r\n\r\n        </IonItem>\r\n    </div>\r\n    );\r\n}\r\nexport default ChatItem;","C:\\Users\\lenovo\\letterBox\\src\\pages\\SmallComponents\\Chats.jsx",["133","134","135","136"],"\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport \"./Chats.css\";\r\nimport { AppContext } from \"../../initialState\";\r\n\r\n\r\n\r\n\r\nconst Chats = ({ messages }) => {\r\n    let { state, dispatch } = useContext(AppContext);\r\n    let user = state.user.phone;\r\n    let sent = user + \"/\" + state.chattingWith.phone;\r\n    let recieve = state.chattingWith.phone + \"/\" + user;\r\n\r\n    const divRef = useRef(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (messages.length > 0) {\r\n            divRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n\r\n    //alert(\"CHat\");\r\n    return (messages.map((doc) => {\r\n        let a = 0;\r\n        if (doc.channel == sent) {\r\n            return (<div key={doc['id']} className=\"chat-box-sent\" ><p className=\"p1\">{doc.content}</p><div ref={divRef} /></div>)\r\n        }\r\n        else {\r\n            return (<div key={doc['id']} className=\"chat-box-recieve\" ><p className=\"p2\">{doc.content}</p><div ref={divRef} /></div>)\r\n        }\r\n    }));\r\n}\r\n\r\n\r\nexport default Chats;","C:\\Users\\lenovo\\letterBox\\src\\pages\\AllUsers.jsx",["137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useContext, useEffect, useState } from 'react';\nimport {\n  IonList, IonItem, IonLabel, IonInput, IonToggle, IonRadio, IonCheckbox, IonItemSliding, IonHeader,\n  IonItemOption, IonItemOptions, IonContent, IonPage, useIonViewDidEnter\n} from '@ionic/react';\nimport ChatItem from \"./ChatItem\";\n\nimport db from \"../Firestore\";\nimport { AppContext } from \"../initialState\";\n\n\nlet all = [];\nfunction Page() {\n  return (\n    <IonContent >\n      <p>Here you can see every user we have.</p>\n      {/*-- List of Text Items --*/}\n      <IonList>\n        {all.map((item) =>\n\n          <ChatItem user={item} key={item[1]} />\n        )}\n\n      </IonList>\n\n\n\n      {/*-- List of Sliding Items --*/}\n\n    </IonContent>\n  )\n}\n\n\nfunction Tab2() {\n  let [dataFetched, check] = useState(false);\n\n  let { state, dispatch } = useContext(AppContext);\n\n  var l = [];\n  var text_display = \"\";\n  async function a() {\n\n\n    let k = await db.collection(\"users\").get().then((querySnapshot) => (\n      querySnapshot.forEach((doc) => {\n        if (doc.data()['phone'] != state.user.phone) {\n          var s = doc.data()\n          var user = [];\n          user.push(s['name']);\n          user.push(s['phone']);\n          l.push(user);\n        }\n        //\n\n      })\n    ));\n\n\n    //\n\n\n\n    all = l;\n    l = [];\n\n    check(true);\n\n\n  };\n  useIonViewDidEnter(() => { a(); });\n\n\n\n\n  return (<IonPage>\n\n    {\n      dataFetched ? <Page /> : <p>Loading...    {text_display}</p>\n    }\n  </IonPage>\n  );\n};\nexport default Tab2;\n\n","C:\\Users\\lenovo\\letterBox\\src\\pages\\Contacts.jsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, useIonViewDidEnter, useIonViewWillEnter } from '@ionic/react';\nimport { useContext, useEffect, useState } from 'react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Tab1.css';\nimport db from \"../Firestore\";\nimport { AppContext } from \"../initialState\";\nimport ChatItem from './ChatItem';\nconst Tab1 = () => {\n  let [contacts = [], setContacts] = useState();\n  let { state, __ } = useContext(AppContext);\n  let [contactreceived, setIf] = useState(false);\n  let user_id = state.user.phone;\n  let users = [];\n\n\n  useIonViewDidEnter(async () => {\n\n  })\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <p> People you text would appear here</p>\n      </IonHeader>\n      <IonContent>\n\n        Coming Soon!!\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default Tab1;\n",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":12,"column":19,"nodeType":"171","messageId":"172","endLine":12,"endColumn":25},{"ruleId":"169","severity":1,"message":"173","line":12,"column":37,"nodeType":"171","messageId":"172","endLine":12,"endColumn":45},{"ruleId":"169","severity":1,"message":"174","line":45,"column":16,"nodeType":"171","messageId":"172","endLine":45,"endColumn":24},{"ruleId":"165","replacedBy":"175"},{"ruleId":"167","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"178","line":5,"column":22,"nodeType":"171","messageId":"172","endLine":5,"endColumn":28},{"ruleId":"169","severity":1,"message":"179","line":6,"column":5,"nodeType":"171","messageId":"172","endLine":6,"endColumn":11},{"ruleId":"169","severity":1,"message":"180","line":7,"column":5,"nodeType":"171","messageId":"172","endLine":7,"endColumn":10},{"ruleId":"169","severity":1,"message":"181","line":8,"column":5,"nodeType":"171","messageId":"172","endLine":8,"endColumn":9},{"ruleId":"169","severity":1,"message":"182","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"183","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":32},{"ruleId":"169","severity":1,"message":"184","line":13,"column":8,"nodeType":"171","messageId":"172","endLine":13,"endColumn":14},{"ruleId":"169","severity":1,"message":"185","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":26,"column":18,"nodeType":"188","messageId":"189","endLine":26,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":26,"column":36,"nodeType":"188","messageId":"189","endLine":26,"endColumn":38},{"ruleId":"186","severity":1,"message":"187","line":26,"column":57,"nodeType":"188","messageId":"189","endLine":26,"endColumn":59},{"ruleId":"169","severity":1,"message":"190","line":35,"column":17,"nodeType":"171","messageId":"172","endLine":35,"endColumn":20},{"ruleId":"169","severity":1,"message":"191","line":37,"column":17,"nodeType":"171","messageId":"172","endLine":37,"endColumn":24},{"ruleId":"192","severity":1,"message":"193","line":37,"column":89,"nodeType":"194","messageId":"195","endLine":37,"endColumn":90,"fix":"196"},{"ruleId":"186","severity":1,"message":"187","line":46,"column":51,"nodeType":"188","messageId":"189","endLine":46,"endColumn":53},{"ruleId":"186","severity":1,"message":"187","line":104,"column":48,"nodeType":"188","messageId":"189","endLine":104,"endColumn":50},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"197","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":14},{"ruleId":"169","severity":1,"message":"198","line":8,"column":10,"nodeType":"171","messageId":"172","endLine":8,"endColumn":21},{"ruleId":"169","severity":1,"message":"199","line":9,"column":10,"nodeType":"171","messageId":"172","endLine":9,"endColumn":18},{"ruleId":"169","severity":1,"message":"200","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":13},{"ruleId":"169","severity":1,"message":"201","line":6,"column":9,"nodeType":"171","messageId":"172","endLine":6,"endColumn":10},{"ruleId":"169","severity":1,"message":"202","line":1,"column":29,"nodeType":"171","messageId":"172","endLine":1,"endColumn":38},{"ruleId":"169","severity":1,"message":"203","line":5,"column":131,"nodeType":"171","messageId":"172","endLine":5,"endColumn":150},{"ruleId":"169","severity":1,"message":"204","line":9,"column":13,"nodeType":"171","messageId":"172","endLine":9,"endColumn":19},{"ruleId":"169","severity":1,"message":"205","line":20,"column":9,"nodeType":"171","messageId":"172","endLine":20,"endColumn":10},{"ruleId":"169","severity":1,"message":"201","line":41,"column":17,"nodeType":"171","messageId":"172","endLine":41,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":60,"column":23,"nodeType":"188","messageId":"189","endLine":60,"endColumn":25},{"ruleId":"169","severity":1,"message":"201","line":69,"column":13,"nodeType":"171","messageId":"172","endLine":69,"endColumn":14},{"ruleId":"169","severity":1,"message":"206","line":1,"column":40,"nodeType":"171","messageId":"172","endLine":1,"endColumn":46},{"ruleId":"169","severity":1,"message":"207","line":3,"column":5,"nodeType":"171","messageId":"172","endLine":3,"endColumn":12},{"ruleId":"169","severity":1,"message":"208","line":3,"column":33,"nodeType":"171","messageId":"172","endLine":3,"endColumn":41},{"ruleId":"169","severity":1,"message":"209","line":3,"column":43,"nodeType":"171","messageId":"172","endLine":3,"endColumn":52},{"ruleId":"169","severity":1,"message":"210","line":3,"column":54,"nodeType":"171","messageId":"172","endLine":3,"endColumn":62},{"ruleId":"169","severity":1,"message":"211","line":3,"column":64,"nodeType":"171","messageId":"172","endLine":3,"endColumn":75},{"ruleId":"169","severity":1,"message":"212","line":3,"column":77,"nodeType":"171","messageId":"172","endLine":3,"endColumn":91},{"ruleId":"169","severity":1,"message":"213","line":4,"column":5,"nodeType":"171","messageId":"172","endLine":4,"endColumn":18},{"ruleId":"169","severity":1,"message":"214","line":4,"column":20,"nodeType":"171","messageId":"172","endLine":4,"endColumn":34},{"ruleId":"169","severity":1,"message":"215","line":4,"column":36,"nodeType":"171","messageId":"172","endLine":4,"endColumn":46},{"ruleId":"169","severity":1,"message":"216","line":4,"column":48,"nodeType":"171","messageId":"172","endLine":4,"endColumn":55},{"ruleId":"169","severity":1,"message":"217","line":4,"column":68,"nodeType":"171","messageId":"172","endLine":4,"endColumn":77},{"ruleId":"169","severity":1,"message":"203","line":4,"column":79,"nodeType":"171","messageId":"172","endLine":4,"endColumn":98},{"ruleId":"169","severity":1,"message":"218","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":18},{"ruleId":"169","severity":1,"message":"201","line":42,"column":13,"nodeType":"171","messageId":"172","endLine":42,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":58,"column":8,"nodeType":"221","endLine":58,"endColumn":17,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":68,"column":17,"nodeType":"225","endLine":68,"endColumn":45},{"ruleId":"169","severity":1,"message":"174","line":10,"column":18,"nodeType":"171","messageId":"172","endLine":10,"endColumn":26},{"ruleId":"169","severity":1,"message":"226","line":13,"column":9,"nodeType":"171","messageId":"172","endLine":13,"endColumn":16},{"ruleId":"169","severity":1,"message":"227","line":28,"column":13,"nodeType":"171","messageId":"172","endLine":28,"endColumn":14},{"ruleId":"186","severity":1,"message":"187","line":29,"column":25,"nodeType":"188","messageId":"189","endLine":29,"endColumn":27},{"ruleId":"169","severity":1,"message":"202","line":1,"column":29,"nodeType":"171","messageId":"172","endLine":1,"endColumn":38},{"ruleId":"169","severity":1,"message":"228","line":3,"column":12,"nodeType":"171","messageId":"172","endLine":3,"endColumn":19},{"ruleId":"169","severity":1,"message":"229","line":3,"column":21,"nodeType":"171","messageId":"172","endLine":3,"endColumn":29},{"ruleId":"169","severity":1,"message":"208","line":3,"column":31,"nodeType":"171","messageId":"172","endLine":3,"endColumn":39},{"ruleId":"169","severity":1,"message":"209","line":3,"column":41,"nodeType":"171","messageId":"172","endLine":3,"endColumn":50},{"ruleId":"169","severity":1,"message":"210","line":3,"column":52,"nodeType":"171","messageId":"172","endLine":3,"endColumn":60},{"ruleId":"169","severity":1,"message":"211","line":3,"column":62,"nodeType":"171","messageId":"172","endLine":3,"endColumn":73},{"ruleId":"169","severity":1,"message":"212","line":3,"column":75,"nodeType":"171","messageId":"172","endLine":3,"endColumn":89},{"ruleId":"169","severity":1,"message":"230","line":3,"column":91,"nodeType":"171","messageId":"172","endLine":3,"endColumn":100},{"ruleId":"169","severity":1,"message":"213","line":4,"column":3,"nodeType":"171","messageId":"172","endLine":4,"endColumn":16},{"ruleId":"169","severity":1,"message":"214","line":4,"column":18,"nodeType":"171","messageId":"172","endLine":4,"endColumn":32},{"ruleId":"169","severity":1,"message":"174","line":38,"column":16,"nodeType":"171","messageId":"172","endLine":38,"endColumn":24},{"ruleId":"169","severity":1,"message":"201","line":45,"column":9,"nodeType":"171","messageId":"172","endLine":45,"endColumn":10},{"ruleId":"186","severity":1,"message":"231","line":47,"column":33,"nodeType":"188","messageId":"189","endLine":47,"endColumn":35},{"ruleId":"169","severity":1,"message":"232","line":1,"column":42,"nodeType":"171","messageId":"172","endLine":1,"endColumn":50},{"ruleId":"169","severity":1,"message":"233","line":1,"column":52,"nodeType":"171","messageId":"172","endLine":1,"endColumn":62},{"ruleId":"169","severity":1,"message":"203","line":1,"column":84,"nodeType":"171","messageId":"172","endLine":1,"endColumn":103},{"ruleId":"169","severity":1,"message":"202","line":2,"column":22,"nodeType":"171","messageId":"172","endLine":2,"endColumn":31},{"ruleId":"169","severity":1,"message":"234","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":24},{"ruleId":"169","severity":1,"message":"235","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":10},{"ruleId":"169","severity":1,"message":"236","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":16},{"ruleId":"169","severity":1,"message":"237","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":16},{"ruleId":"169","severity":1,"message":"238","line":9,"column":23,"nodeType":"171","messageId":"172","endLine":9,"endColumn":34},{"ruleId":"169","severity":1,"message":"239","line":10,"column":16,"nodeType":"171","messageId":"172","endLine":10,"endColumn":18},{"ruleId":"169","severity":1,"message":"240","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":23},{"ruleId":"169","severity":1,"message":"241","line":11,"column":25,"nodeType":"171","messageId":"172","endLine":11,"endColumn":30},{"ruleId":"169","severity":1,"message":"191","line":12,"column":7,"nodeType":"171","messageId":"172","endLine":12,"endColumn":14},{"ruleId":"169","severity":1,"message":"242","line":13,"column":7,"nodeType":"171","messageId":"172","endLine":13,"endColumn":12},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'square' is defined but never used.","Identifier","unusedVar","'videocam' is defined but never used.","'dispatch' is assigned a value but never used.",["243"],["244"],"'act' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Tab2' is defined but never used.","'loadPartialConfigAsync' is defined but never used.","'signIn' is defined but never used.","'alertCircleSharp' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ids' is defined but never used.","'user_id' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"245","text":"246"},"'name' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'password' is assigned a value but never used.","'React' is defined but never used.","'k' is assigned a value but never used.","'useEffect' is defined but never used.","'useIonViewWillEnter' is defined but never used.","'Scroll' is defined but never used.","'v' is assigned a value but never used.","'useRef' is defined but never used.","'IonList' is defined but never used.","'IonInput' is defined but never used.","'IonToggle' is defined but never used.","'IonRadio' is defined but never used.","'IonCheckbox' is defined but never used.","'IonItemSliding' is defined but never used.","'IonItemOption' is defined but never used.","'IonItemOptions' is defined but never used.","'IonContent' is defined but never used.","'IonPage' is defined but never used.","'IonButton' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state.user.phone' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["247"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'recieve' is assigned a value but never used.","'a' is assigned a value but never used.","'IonItem' is defined but never used.","'IonLabel' is defined but never used.","'IonHeader' is defined but never used.","Expected '!==' and instead saw '!='.","'IonTitle' is defined but never used.","'IonToolbar' is defined but never used.","'ExploreContainer' is defined but never used.","'db' is defined but never used.","'ChatItem' is defined but never used.","'contacts' is assigned a value but never used.","'setContacts' is assigned a value but never used.","'__' is assigned a value but never used.","'contactreceived' is assigned a value but never used.","'setIf' is assigned a value but never used.","'users' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1333,1352],"\r\n                .",{"desc":"248","fix":"249"},"Update the dependencies array to be: [lastmsg, state.user.phone, user]",{"range":"250","text":"251"},[1814,1823],"[lastmsg, state.user.phone, user]"]