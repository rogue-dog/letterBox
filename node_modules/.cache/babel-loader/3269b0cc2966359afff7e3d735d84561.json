{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\letterBox\\\\src\\\\pages\\\\LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './LoginPage.css';\nimport { IonPage, IonHeader, IonContent, IonTitle, IonButton, IonLoading } from \"@ionic/react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Tab2 from './Tab2';\nimport db from \"../Firestore\";\nimport { loadPartialConfigAsync } from '@babel/core';\nimport signIn from './SignIn';\nimport { AppContext } from \"../initialState\";\nimport { alertCircleSharp } from 'ionicons/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  let [showLoading, setShowLoading] = useState(false);\n  let {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  let [name, setName] = useState(\"\");\n  let [phoneNumber, setNumber] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n\n  const login = async () => {\n    if (name == \"\" || password == \"\" || phoneNumber == \"\") {\n      alert(\"Please Fill in all the details\");\n    } else {\n      //Show Progresss\n      setShowLoading(true); //Check the <inputsssss className=\"\"></inputsssss>\n\n      let user;\n      alert(password);\n      var ids;\n      let user_exists = true;\n      let user_id = await db.collection(\"users\").doc(phoneNumber.toString()).get().then(doc => {\n        if (!doc.exists) {\n          alert(\"Account Doesnt Exist!, Press Sign In Button to make a new Account.\");\n          setShowLoading(false);\n          user_exists = false;\n        } else {\n          if (!(password.toString() == doc.data()['password'])) {\n            alert(\"Incorrect Password,Please Try Again.\");\n            setShowLoading(false);\n          } else {\n            alert(\"Welcome\" + name.toString());\n            user = doc.data();\n            var action = {\n              type: \"LoginUser\",\n              payload: user\n            };\n            dispatch(action);\n            setShowLoading(false);\n          }\n        }\n      });\n\n      if (!user_exists) {\n        return;\n      }\n    }\n  };\n\n  const signIn = async () => {\n    setShowLoading(true);\n    var user_details = {\n      name: name.toString(),\n      contact: [],\n      password: password.toString(),\n      phone: phoneNumber.toString()\n    };\n    db.collection(\"users\").doc(phoneNumber.toString()).get().then(doc => {\n      if (doc.exists) {\n        alert(\"Account Already Exists!, Logging In...\");\n\n        if (doc.data()['password'] == password.toString()) {\n          alert(\"Welcome\" + name.toString());\n          setShowLoading(false);\n          var action = {\n            type: \"LoginUser\",\n            payload: user_details\n          };\n          dispatch(state, action);\n          setShowLoading(false);\n        } else {\n          alert(\"Invalid Password!\");\n          setShowLoading(false);\n        }\n      } else {\n        db.collection(\"users\").doc(phoneNumber.toString()).set(user_details).then(() => {\n          alert(\"Welcome!!!\");\n          setShowLoading(false);\n          var action = {\n            type: \"LoginUser\",\n            payload: user_details\n          };\n          dispatch(action);\n          setShowLoading(false);\n        });\n      }\n    });\n  };\n\n  var login_form = /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonTitle, {\n        children: [\"letterBox  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-style\",\n        placeholder: \"Name\",\n        type: \"text\",\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-style\",\n        placeholder: \"Phone\",\n        type: \"tel\",\n        maxLength: \"10\",\n        onChange: e => {\n          setNumber(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-style\",\n        placeholder: \"Password\",\n        type: \"password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        onClick: e => {\n          login();\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        onClick: e => {\n          signIn();\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IonLoading, {\n        isOpen: showLoading,\n        onDidDismiss: () => setShowLoading(false),\n        message: 'Please wait...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n\n  return login_form;\n}\n\n_s(LoginForm, \"GAMXkLK+fPF7PnYUQDCcOQwtau8=\");\n\n_c = LoginForm;\n;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/pages/LoginPage.jsx"],"names":["React","useContext","useState","IonPage","IonHeader","IonContent","IonTitle","IonButton","IonLoading","BrowserRouter","Router","Switch","Route","Link","Tab2","db","loadPartialConfigAsync","signIn","AppContext","alertCircleSharp","LoginForm","showLoading","setShowLoading","state","dispatch","name","setName","phoneNumber","setNumber","password","setPassword","login","alert","user","ids","user_exists","user_id","collection","doc","toString","get","then","exists","data","action","type","payload","user_details","contact","phone","set","login_form","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './LoginPage.css';\r\nimport { IonPage, IonHeader, IonContent, IonTitle, IonButton, IonLoading } from \"@ionic/react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Tab2 from './Tab2';\r\nimport db from \"../Firestore\";\r\nimport { loadPartialConfigAsync } from '@babel/core';\r\nimport signIn from './SignIn';\r\nimport { AppContext } from \"../initialState\"\r\nimport { alertCircleSharp } from 'ionicons/icons';\r\n\r\nfunction LoginForm() {\r\n    let [showLoading, setShowLoading] = useState(false);\r\n    let { state, dispatch } = useContext(AppContext);\r\n\r\n    let [name, setName] = useState(\"\");\r\n    let [phoneNumber, setNumber] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n\r\n    const login = async () => {\r\n        if (name == \"\" || password == \"\" || phoneNumber == \"\") {\r\n            alert(\"Please Fill in all the details\");\r\n        }\r\n        else {\r\n            //Show Progresss\r\n            setShowLoading(true);\r\n            //Check the <inputsssss className=\"\"></inputsssss>\r\n            let user;\r\n            alert(password);\r\n            var ids;\r\n            let user_exists = true;\r\n            let user_id = await db.collection(\"users\").doc(phoneNumber.toString()).get().\r\n                then((doc) => {\r\n                    if (!doc.exists) {\r\n                        alert(\"Account Doesnt Exist!, Press Sign In Button to make a new Account.\");\r\n                        setShowLoading(false);\r\n                        user_exists = false;\r\n                    }\r\n\r\n                    else {\r\n                        if (!(password.toString() == doc.data()['password'])) {\r\n                            alert(\"Incorrect Password,Please Try Again.\");\r\n                            setShowLoading(false);\r\n                        }\r\n                        else {\r\n                            alert(\"Welcome\" + name.toString());\r\n                            user = doc.data();\r\n                            var action = {\r\n                                type: \"LoginUser\"\r\n                                , payload: user\r\n                            };\r\n                            dispatch(action);\r\n                            setShowLoading(false);\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                });\r\n            if (!user_exists) {\r\n\r\n\r\n                return;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const signIn = async () => {\r\n        setShowLoading(true);\r\n        var user_details = {\r\n            name: name.toString(),\r\n            contact: [],\r\n            password: password.toString(),\r\n            phone: phoneNumber.toString()\r\n\r\n        };\r\n        db.collection(\"users\").doc(phoneNumber.toString()).get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    alert(\"Account Already Exists!, Logging In...\");\r\n                    if (doc.data()['password'] == password.toString()) {\r\n                        alert(\"Welcome\" + name.toString());\r\n                        setShowLoading(false);\r\n                        var action = {\r\n                            type: \"LoginUser\"\r\n                            , payload: user_details\r\n                        };\r\n                        dispatch(state, action);\r\n                        setShowLoading(false);\r\n                    }\r\n                    else {\r\n                        alert(\"Invalid Password!\");\r\n                        setShowLoading(false);\r\n\r\n                    }\r\n                }\r\n                else {\r\n\r\n\r\n                    db.collection(\"users\").doc(phoneNumber.toString()).set(\r\n                        user_details\r\n                    )\r\n                        .then(() => {\r\n                            alert(\"Welcome!!!\");\r\n                            setShowLoading(false);\r\n                            var action = {\r\n                                type: \"LoginUser\"\r\n                                , payload: user_details\r\n                            };\r\n                            dispatch(action);\r\n                            setShowLoading(false);\r\n                        });\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    var login_form = (\r\n        <IonPage>\r\n            <IonHeader><IonTitle>letterBox  <h2>Log In</h2></IonTitle></IonHeader>\r\n            <IonContent>\r\n\r\n                <input className=\"input-style\" placeholder=\"Name\" type=\"text\" onChange={(e) => { setName(e.target.value) }}\r\n                /><br></br>\r\n                <input className=\"input-style\" placeholder=\"Phone\" type=\"tel\" maxLength=\"10\" onChange={(e) => { setNumber(e.target.value) }} />\r\n                <input className=\"input-style\" placeholder=\"Password\" type=\"password\" onChange={(e) => { setPassword(e.target.value) }} />\r\n\r\n                <IonButton onClick={(e) => { login() }}>Login</IonButton>\r\n                <IonButton onClick={(e) => { signIn() }}>Sign In</IonButton>\r\n                <IonLoading\r\n\r\n                    isOpen={showLoading}\r\n                    onDidDismiss={() => setShowLoading(false)}\r\n                    message={'Please wait...'}\r\n\r\n                />\r\n\r\n\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n    return login_form;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}