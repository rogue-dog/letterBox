{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\letterBox\\\\src\\\\pages\\\\ChatPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef } from \"react\";\nimport { AppContext } from \"../initialState\";\nimport { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { IonContent, IonFooter, IonGrid, IonHeader, IonPage, IonRow, IonToolbar, IonCol, IonInput, IonButton, useIonViewDidEnter, useIonViewWillEnter, useIonViewWillLeave } from \"@ionic/react\";\nimport db from \"../Firestore\";\nimport './styles.css';\nimport Chats from \"./SmallComponents/Chats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = () => {\n  _s();\n\n  let {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  let [message, setMessage] = useState(\"\");\n  let [allmsgs, msgsRecieved] = useState(false);\n  let [messages = [], setChatMessages] = useState();\n  let v = useRef(null);\n  let channel = state.user['phone'] + \"/\" + state.chattingWith.phone;\n\n  const sendMessage = async () => {\n    let d = new Date();\n    let utc = d.toUTCString();\n    let now = Date.now();\n    let message_body = {\n      content: message,\n      channel: channel,\n      dateTime: now,\n      sentBy: state.user['phone'],\n      id: channel + utc\n    };\n\n    if (message) {\n      let k = await db.collection(\"messages\").add(message_body).then(() => {\n        alert(\"message sent!!\");\n      }).catch(error => {\n        alert(error);\n      });\n    } else {\n      alert(\"Cannot Send Empty messages!\");\n    }\n\n    setMessage(\"\");\n  };\n\n  useIonViewWillEnter(async () => {\n    let k = await db.collection(\"messages\").where(\"channel\", \"in\", [channel, channel.split(\"\").reverse().join(\"\")]).orderBy(\"dateTime\").limit(100).onSnapshot(querySnapshot => {\n      let mess = [];\n      querySnapshot.forEach(doc => {\n        mess.push(doc.data()); //alert(mess.length);\n      });\n      setChatMessages(mess);\n      mess = [];\n      msgsRecieved(true);\n    }); //setChatMessages(mess);\n\n    alert(allmsgs); //alert(messages);\n    //alert(mess);\n  });\n  useIonViewWillLeave(() => {\n    v = null;\n    msgsRecieved(false);\n  });\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: state.chattingWith.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: allmsgs ? /*#__PURE__*/_jsxDEV(Chats, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonFooter, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: /*#__PURE__*/_jsxDEV(IonRow, {\n            children: [/*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"11\",\n              children: /*#__PURE__*/_jsxDEV(IonInput, {\n                value: message,\n                placeholder: \"Pour Your Heart Out..\",\n                onIonChange: e => {\n                  setMessage(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonButton, {\n                size: \"2\",\n                onClick: e => {\n                  sendMessage();\n                },\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ChatPage, \"UfjKPtJ85w3ayp0Gc6NNWPPsPtA=\", false, function () {\n  return [useIonViewWillEnter, useIonViewWillLeave];\n});\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/pages/ChatPage.jsx"],"names":["React","useContext","useRef","AppContext","useState","IonContent","IonFooter","IonGrid","IonHeader","IonPage","IonRow","IonToolbar","IonCol","IonInput","IonButton","useIonViewDidEnter","useIonViewWillEnter","useIonViewWillLeave","db","Chats","ChatPage","state","dispatch","message","setMessage","allmsgs","msgsRecieved","messages","setChatMessages","v","channel","user","chattingWith","phone","sendMessage","d","Date","utc","toUTCString","now","message_body","content","dateTime","sentBy","id","k","collection","add","then","alert","catch","error","where","split","reverse","join","orderBy","limit","onSnapshot","querySnapshot","mess","forEach","doc","push","data","name","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useRef } from \"react\";\r\nimport { AppContext } from \"../initialState\";\r\nimport { useState } from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport { IonContent, IonFooter, IonGrid, IonHeader, IonPage, IonRow, IonToolbar, IonCol, IonInput, IonButton, useIonViewDidEnter, useIonViewWillEnter, useIonViewWillLeave } from \"@ionic/react\";\r\nimport db from \"../Firestore\";\r\nimport './styles.css';\r\nimport Chats from \"./SmallComponents/Chats\";\r\n\r\n\r\n\r\n\r\n\r\nconst ChatPage = () => {\r\n    let { state, dispatch } = useContext(AppContext);\r\n    let [message, setMessage] = useState(\"\");\r\n    let [allmsgs, msgsRecieved] = useState(false);\r\n    let [messages = [], setChatMessages] = useState();\r\n    let v = useRef(null);\r\n\r\n\r\n    let channel = state.user['phone'] + \"/\" + state.chattingWith.phone;\r\n    const sendMessage = async () => {\r\n        let d = new Date();\r\n        let utc = d.toUTCString();\r\n        let now = Date.now();\r\n\r\n        let message_body = {\r\n            content: message,\r\n            channel: channel,\r\n            dateTime: now,\r\n            sentBy: state.user['phone'],\r\n            id: channel + utc\r\n        };\r\n        if (message) {\r\n            let k = await db.collection(\"messages\").add(message_body).then(() => {\r\n                alert(\"message sent!!\");\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n        }\r\n        else {\r\n            alert(\"Cannot Send Empty messages!\");\r\n        }\r\n        setMessage(\"\");\r\n\r\n    }\r\n\r\n\r\n    useIonViewWillEnter(async () => {\r\n\r\n        let k = await db.collection(\"messages\").where(\"channel\", \"in\", [channel, channel.split(\"\").reverse().join(\"\")])\r\n            .orderBy(\"dateTime\").limit(100).onSnapshot((querySnapshot) => {\r\n                let mess = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    mess.push(doc.data());\r\n                    //alert(mess.length);\r\n\r\n                });\r\n                setChatMessages(mess);\r\n                mess = [];\r\n                msgsRecieved(true);\r\n            });\r\n\r\n        //setChatMessages(mess);\r\n\r\n        alert(allmsgs);\r\n\r\n        //alert(messages);\r\n        //alert(mess);\r\n\r\n    })\r\n\r\n    useIonViewWillLeave(() => {\r\n        v = null;\r\n        msgsRecieved(false);\r\n    })\r\n\r\n\r\n\r\n    return (<IonPage>\r\n        <IonHeader>{state.chattingWith.name}</IonHeader>\r\n        <IonContent>\r\n\r\n            {allmsgs ? <Chats messages={messages} /> : <p>Loading Messages...</p>}\r\n\r\n\r\n        </IonContent>\r\n\r\n        <IonFooter>\r\n            <IonToolbar>\r\n                <IonGrid>\r\n                    <IonRow>\r\n                        <IonCol size=\"11\" >\r\n\r\n                            <IonInput value={message} placeholder=\"Pour Your Heart Out..\" onIonChange={(e) => { setMessage(e.target.value) }}></IonInput>\r\n                        </IonCol>\r\n                        <IonCol >\r\n\r\n                            <IonButton size=\"2\" onClick={(e) => { sendMessage() }}>Send</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n            </IonToolbar>\r\n\r\n        </IonFooter>\r\n\r\n    </IonPage>\r\n    );\r\n}\r\n\r\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}