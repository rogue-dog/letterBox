{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\letterBox\\\\src\\\\pages\\\\ActualTab.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction init(initialCount) {\n  var initialCount = 0;\n  return {\n    count: initialCount\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n\n    case 'reset':\n      return init(action.payload);\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction ActualTab({\n  initialCount\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Count: \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'reset',\n        payload: initialCount\n      }),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActualTab, \"lpkAvzaijKoaZVi3K36ZWcAB+QM=\");\n\n_c = ActualTab;\n;\nexport default ActualTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActualTab\");","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/pages/ActualTab.jsx"],"names":["useReducer","init","initialCount","count","reducer","state","action","type","payload","Error","ActualTab","dispatch"],"mappings":";;;AACA,SAASA,UAAT,QAA2B,OAA3B;;;;AAQA,SAASC,IAAT,CAAcC,YAAd,EAA4B;AACxB,MAAIA,YAAY,GAAG,CAAnB;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAED;AAAT,GAAP;AACH;;AAED,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO;AAAEA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACJ,SAAK,OAAL;AACI,aAAOF,IAAI,CAACK,MAAM,CAACE,OAAR,CAAX;;AACJ;AACI,YAAM,IAAIC,KAAJ,EAAN;AARR;AAUH;;AAED,SAASC,SAAT,CAAmB;AAAER,EAAAA;AAAF,CAAnB,EAAqC;AAAA;;AACjC,QAAM,CAACG,KAAD,EAAQM,QAAR,IAAoBX,UAAU,CAACI,OAAD,EAAUF,YAAV,EAAwBD,IAAxB,CAApC;AACA,sBACI;AAAA,0BACYI,KAAK,CAACF,KADlB,eAEI;AACI,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEN;AAA1B,OAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH;;GAbQG,S;;KAAAA,S;AAaR;AACD,eAAeA,SAAf","sourcesContent":["\r\nimport { useReducer } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction init(initialCount) {\r\n    var initialCount = 0;\r\n    return { count: initialCount };\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'increment':\r\n            return { count: state.count + 1 };\r\n        case 'decrement':\r\n            return { count: state.count - 1 };\r\n        case 'reset':\r\n            return init(action.payload);\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nfunction ActualTab({ initialCount }) {\r\n    const [state, dispatch] = useReducer(reducer, initialCount, init);\r\n    return (\r\n        <>\r\n            Count: {state.count}\r\n            <button\r\n                onClick={() => dispatch({ type: 'reset', payload: initialCount })}>\r\n                Reset\r\n            </button>\r\n            <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n            <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n        </>\r\n    );\r\n};\r\nexport default ActualTab;\r\n"]},"metadata":{},"sourceType":"module"}