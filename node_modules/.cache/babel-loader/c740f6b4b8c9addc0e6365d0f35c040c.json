{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _defineProperty = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _environmentVisitor;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.skipAllButComputedKey = skipAllButComputedKey;\nexports.default = exports.environmentVisitor = void 0;\n\nvar _traverse = require(\"@babel/traverse\");\n\nvar _helperMemberExpressionToFunctions = require(\"@babel/helper-member-expression-to-functions\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar t = require(\"@babel/types\");\n\nfunction getPrototypeOfExpression(objectRef, isStatic, file, isPrivateMethod) {\n  objectRef = t.cloneNode(objectRef);\n  var targetRef = isStatic || isPrivateMethod ? objectRef : t.memberExpression(objectRef, t.identifier(\"prototype\"));\n  return t.callExpression(file.addHelper(\"getPrototypeOf\"), [targetRef]);\n}\n\nfunction skipAllButComputedKey(path) {\n  if (!path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  var keys = t.VISITOR_KEYS[path.type];\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (key !== \"key\") path.skipKey(key);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nvar environmentVisitor = (_environmentVisitor = {}, _defineProperty(_environmentVisitor, \"\".concat(t.staticBlock ? \"StaticBlock|\" : \"\", \"ClassPrivateProperty|TypeAnnotation\"), function ClassPrivatePropertyTypeAnnotation(path) {\n  path.skip();\n}), _defineProperty(_environmentVisitor, \"Function\", function Function(path) {\n  if (path.isMethod()) return;\n  if (path.isArrowFunctionExpression()) return;\n  path.skip();\n}), _defineProperty(_environmentVisitor, \"Method|ClassProperty\", function MethodClassProperty(path) {\n  skipAllButComputedKey(path);\n}), _environmentVisitor);\nexports.environmentVisitor = environmentVisitor;\n\nvar visitor = _traverse.default.visitors.merge([environmentVisitor, {\n  Super: function Super(path, state) {\n    var node = path.node,\n        parentPath = path.parentPath;\n    if (!parentPath.isMemberExpression({\n      object: node\n    })) return;\n    state.handle(parentPath);\n  }\n}]);\n\nvar unshadowSuperBindingVisitor = _traverse.default.visitors.merge([environmentVisitor, {\n  Scopable: function Scopable(path, _ref) {\n    var refName = _ref.refName;\n    var binding = path.scope.getOwnBinding(refName);\n\n    if (binding && binding.identifier.name === refName) {\n      path.scope.rename(refName);\n    }\n  }\n}]);\n\nvar specHandlers = {\n  memoise: function memoise(superMember, count) {\n    var scope = superMember.scope,\n        node = superMember.node;\n    var computed = node.computed,\n        property = node.property;\n\n    if (!computed) {\n      return;\n    }\n\n    var memo = scope.maybeGenerateMemoised(property);\n\n    if (!memo) {\n      return;\n    }\n\n    this.memoiser.set(property, memo, count);\n  },\n  prop: function prop(superMember) {\n    var _superMember$node = superMember.node,\n        computed = _superMember$node.computed,\n        property = _superMember$node.property;\n\n    if (this.memoiser.has(property)) {\n      return t.cloneNode(this.memoiser.get(property));\n    }\n\n    if (computed) {\n      return t.cloneNode(property);\n    }\n\n    return t.stringLiteral(property.name);\n  },\n  get: function get(superMember) {\n    return this._get(superMember, this._getThisRefs());\n  },\n  _get: function _get(superMember, thisRefs) {\n    var proto = getPrototypeOfExpression(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);\n    return t.callExpression(this.file.addHelper(\"get\"), [thisRefs.memo ? t.sequenceExpression([thisRefs.memo, proto]) : proto, this.prop(superMember), thisRefs.this]);\n  },\n  _getThisRefs: function _getThisRefs() {\n    if (!this.isDerivedConstructor) {\n      return {\n        this: t.thisExpression()\n      };\n    }\n\n    var thisRef = this.scope.generateDeclaredUidIdentifier(\"thisSuper\");\n    return {\n      memo: t.assignmentExpression(\"=\", thisRef, t.thisExpression()),\n      this: t.cloneNode(thisRef)\n    };\n  },\n  set: function set(superMember, value) {\n    var thisRefs = this._getThisRefs();\n\n    var proto = getPrototypeOfExpression(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);\n    return t.callExpression(this.file.addHelper(\"set\"), [thisRefs.memo ? t.sequenceExpression([thisRefs.memo, proto]) : proto, this.prop(superMember), value, thisRefs.this, t.booleanLiteral(superMember.isInStrictMode())]);\n  },\n  destructureSet: function destructureSet(superMember) {\n    throw superMember.buildCodeFrameError(\"Destructuring to a super field is not supported yet.\");\n  },\n  call: function call(superMember, args) {\n    var thisRefs = this._getThisRefs();\n\n    return (0, _helperOptimiseCallExpression.default)(this._get(superMember, thisRefs), t.cloneNode(thisRefs.this), args, false);\n  },\n  optionalCall: function optionalCall(superMember, args) {\n    var thisRefs = this._getThisRefs();\n\n    return (0, _helperOptimiseCallExpression.default)(this._get(superMember, thisRefs), t.cloneNode(thisRefs.this), args, true);\n  }\n};\nvar looseHandlers = Object.assign({}, specHandlers, {\n  prop: function prop(superMember) {\n    var property = superMember.node.property;\n\n    if (this.memoiser.has(property)) {\n      return t.cloneNode(this.memoiser.get(property));\n    }\n\n    return t.cloneNode(property);\n  },\n  get: function get(superMember) {\n    var isStatic = this.isStatic,\n        getSuperRef = this.getSuperRef;\n    var computed = superMember.node.computed;\n    var prop = this.prop(superMember);\n    var object;\n\n    if (isStatic) {\n      var _getSuperRef;\n\n      object = (_getSuperRef = getSuperRef()) != null ? _getSuperRef : t.memberExpression(t.identifier(\"Function\"), t.identifier(\"prototype\"));\n    } else {\n      var _getSuperRef2;\n\n      object = t.memberExpression((_getSuperRef2 = getSuperRef()) != null ? _getSuperRef2 : t.identifier(\"Object\"), t.identifier(\"prototype\"));\n    }\n\n    return t.memberExpression(object, prop, computed);\n  },\n  set: function set(superMember, value) {\n    var computed = superMember.node.computed;\n    var prop = this.prop(superMember);\n    return t.assignmentExpression(\"=\", t.memberExpression(t.thisExpression(), prop, computed), value);\n  },\n  destructureSet: function destructureSet(superMember) {\n    var computed = superMember.node.computed;\n    var prop = this.prop(superMember);\n    return t.memberExpression(t.thisExpression(), prop, computed);\n  },\n  call: function call(superMember, args) {\n    return (0, _helperOptimiseCallExpression.default)(this.get(superMember), t.thisExpression(), args, false);\n  },\n  optionalCall: function optionalCall(superMember, args) {\n    return (0, _helperOptimiseCallExpression.default)(this.get(superMember), t.thisExpression(), args, true);\n  }\n});\n\nvar ReplaceSupers = /*#__PURE__*/function () {\n  function ReplaceSupers(opts) {\n    _classCallCheck(this, ReplaceSupers);\n\n    var _opts$constantSuper;\n\n    var path = opts.methodPath;\n    this.methodPath = path;\n    this.isDerivedConstructor = path.isClassMethod({\n      kind: \"constructor\"\n    }) && !!opts.superRef;\n    this.isStatic = path.isObjectMethod() || path.node.static || (path.isStaticBlock == null ? void 0 : path.isStaticBlock());\n    this.isPrivateMethod = path.isPrivate() && path.isMethod();\n    this.file = opts.file;\n    this.constantSuper = (_opts$constantSuper = opts.constantSuper) != null ? _opts$constantSuper : opts.isLoose;\n    this.opts = opts;\n  }\n\n  _createClass(ReplaceSupers, [{\n    key: \"getObjectRef\",\n    value: function getObjectRef() {\n      return t.cloneNode(this.opts.objectRef || this.opts.getObjectRef());\n    }\n  }, {\n    key: \"getSuperRef\",\n    value: function getSuperRef() {\n      if (this.opts.superRef) return t.cloneNode(this.opts.superRef);\n      if (this.opts.getSuperRef) return t.cloneNode(this.opts.getSuperRef());\n    }\n  }, {\n    key: \"replace\",\n    value: function replace() {\n      if (this.opts.refToPreserve) {\n        this.methodPath.traverse(unshadowSuperBindingVisitor, {\n          refName: this.opts.refToPreserve.name\n        });\n      }\n\n      var handler = this.constantSuper ? looseHandlers : specHandlers;\n      (0, _helperMemberExpressionToFunctions.default)(this.methodPath, visitor, Object.assign({\n        file: this.file,\n        scope: this.methodPath.scope,\n        isDerivedConstructor: this.isDerivedConstructor,\n        isStatic: this.isStatic,\n        isPrivateMethod: this.isPrivateMethod,\n        getObjectRef: this.getObjectRef.bind(this),\n        getSuperRef: this.getSuperRef.bind(this),\n        boundGet: handler.get\n      }, handler));\n    }\n  }]);\n\n  return ReplaceSupers;\n}();\n\nexports.default = ReplaceSupers;","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/helper-replace-supers/lib/index.js"],"names":["Object","defineProperty","exports","value","skipAllButComputedKey","default","environmentVisitor","_traverse","require","_helperMemberExpressionToFunctions","_helperOptimiseCallExpression","t","getPrototypeOfExpression","objectRef","isStatic","file","isPrivateMethod","cloneNode","targetRef","memberExpression","identifier","callExpression","addHelper","path","node","computed","skip","keys","VISITOR_KEYS","type","key","skipKey","staticBlock","isMethod","isArrowFunctionExpression","visitor","visitors","merge","Super","state","parentPath","isMemberExpression","object","handle","unshadowSuperBindingVisitor","Scopable","refName","binding","scope","getOwnBinding","name","rename","specHandlers","memoise","superMember","count","property","memo","maybeGenerateMemoised","memoiser","set","prop","has","get","stringLiteral","_get","_getThisRefs","thisRefs","proto","getObjectRef","sequenceExpression","this","isDerivedConstructor","thisExpression","thisRef","generateDeclaredUidIdentifier","assignmentExpression","booleanLiteral","isInStrictMode","destructureSet","buildCodeFrameError","call","args","optionalCall","looseHandlers","assign","getSuperRef","_getSuperRef","_getSuperRef2","ReplaceSupers","opts","_opts$constantSuper","methodPath","isClassMethod","kind","superRef","isObjectMethod","static","isStaticBlock","isPrivate","constantSuper","isLoose","refToPreserve","traverse","handler","bind","boundGet"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.skipAllButComputedKey = skipAllButComputedKey;\nexports.default = exports.environmentVisitor = void 0;\n\nvar _traverse = require(\"@babel/traverse\");\n\nvar _helperMemberExpressionToFunctions = require(\"@babel/helper-member-expression-to-functions\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar t = require(\"@babel/types\");\n\nfunction getPrototypeOfExpression(objectRef, isStatic, file, isPrivateMethod) {\n  objectRef = t.cloneNode(objectRef);\n  const targetRef = isStatic || isPrivateMethod ? objectRef : t.memberExpression(objectRef, t.identifier(\"prototype\"));\n  return t.callExpression(file.addHelper(\"getPrototypeOf\"), [targetRef]);\n}\n\nfunction skipAllButComputedKey(path) {\n  if (!path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = t.VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}\n\nconst environmentVisitor = {\n  [`${t.staticBlock ? \"StaticBlock|\" : \"\"}ClassPrivateProperty|TypeAnnotation`](path) {\n    path.skip();\n  },\n\n  Function(path) {\n    if (path.isMethod()) return;\n    if (path.isArrowFunctionExpression()) return;\n    path.skip();\n  },\n\n  \"Method|ClassProperty\"(path) {\n    skipAllButComputedKey(path);\n  }\n\n};\nexports.environmentVisitor = environmentVisitor;\n\nconst visitor = _traverse.default.visitors.merge([environmentVisitor, {\n  Super(path, state) {\n    const {\n      node,\n      parentPath\n    } = path;\n    if (!parentPath.isMemberExpression({\n      object: node\n    })) return;\n    state.handle(parentPath);\n  }\n\n}]);\n\nconst unshadowSuperBindingVisitor = _traverse.default.visitors.merge([environmentVisitor, {\n  Scopable(path, {\n    refName\n  }) {\n    const binding = path.scope.getOwnBinding(refName);\n\n    if (binding && binding.identifier.name === refName) {\n      path.scope.rename(refName);\n    }\n  }\n\n}]);\n\nconst specHandlers = {\n  memoise(superMember, count) {\n    const {\n      scope,\n      node\n    } = superMember;\n    const {\n      computed,\n      property\n    } = node;\n\n    if (!computed) {\n      return;\n    }\n\n    const memo = scope.maybeGenerateMemoised(property);\n\n    if (!memo) {\n      return;\n    }\n\n    this.memoiser.set(property, memo, count);\n  },\n\n  prop(superMember) {\n    const {\n      computed,\n      property\n    } = superMember.node;\n\n    if (this.memoiser.has(property)) {\n      return t.cloneNode(this.memoiser.get(property));\n    }\n\n    if (computed) {\n      return t.cloneNode(property);\n    }\n\n    return t.stringLiteral(property.name);\n  },\n\n  get(superMember) {\n    return this._get(superMember, this._getThisRefs());\n  },\n\n  _get(superMember, thisRefs) {\n    const proto = getPrototypeOfExpression(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);\n    return t.callExpression(this.file.addHelper(\"get\"), [thisRefs.memo ? t.sequenceExpression([thisRefs.memo, proto]) : proto, this.prop(superMember), thisRefs.this]);\n  },\n\n  _getThisRefs() {\n    if (!this.isDerivedConstructor) {\n      return {\n        this: t.thisExpression()\n      };\n    }\n\n    const thisRef = this.scope.generateDeclaredUidIdentifier(\"thisSuper\");\n    return {\n      memo: t.assignmentExpression(\"=\", thisRef, t.thisExpression()),\n      this: t.cloneNode(thisRef)\n    };\n  },\n\n  set(superMember, value) {\n    const thisRefs = this._getThisRefs();\n\n    const proto = getPrototypeOfExpression(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);\n    return t.callExpression(this.file.addHelper(\"set\"), [thisRefs.memo ? t.sequenceExpression([thisRefs.memo, proto]) : proto, this.prop(superMember), value, thisRefs.this, t.booleanLiteral(superMember.isInStrictMode())]);\n  },\n\n  destructureSet(superMember) {\n    throw superMember.buildCodeFrameError(`Destructuring to a super field is not supported yet.`);\n  },\n\n  call(superMember, args) {\n    const thisRefs = this._getThisRefs();\n\n    return (0, _helperOptimiseCallExpression.default)(this._get(superMember, thisRefs), t.cloneNode(thisRefs.this), args, false);\n  },\n\n  optionalCall(superMember, args) {\n    const thisRefs = this._getThisRefs();\n\n    return (0, _helperOptimiseCallExpression.default)(this._get(superMember, thisRefs), t.cloneNode(thisRefs.this), args, true);\n  }\n\n};\nconst looseHandlers = Object.assign({}, specHandlers, {\n  prop(superMember) {\n    const {\n      property\n    } = superMember.node;\n\n    if (this.memoiser.has(property)) {\n      return t.cloneNode(this.memoiser.get(property));\n    }\n\n    return t.cloneNode(property);\n  },\n\n  get(superMember) {\n    const {\n      isStatic,\n      getSuperRef\n    } = this;\n    const {\n      computed\n    } = superMember.node;\n    const prop = this.prop(superMember);\n    let object;\n\n    if (isStatic) {\n      var _getSuperRef;\n\n      object = (_getSuperRef = getSuperRef()) != null ? _getSuperRef : t.memberExpression(t.identifier(\"Function\"), t.identifier(\"prototype\"));\n    } else {\n      var _getSuperRef2;\n\n      object = t.memberExpression((_getSuperRef2 = getSuperRef()) != null ? _getSuperRef2 : t.identifier(\"Object\"), t.identifier(\"prototype\"));\n    }\n\n    return t.memberExpression(object, prop, computed);\n  },\n\n  set(superMember, value) {\n    const {\n      computed\n    } = superMember.node;\n    const prop = this.prop(superMember);\n    return t.assignmentExpression(\"=\", t.memberExpression(t.thisExpression(), prop, computed), value);\n  },\n\n  destructureSet(superMember) {\n    const {\n      computed\n    } = superMember.node;\n    const prop = this.prop(superMember);\n    return t.memberExpression(t.thisExpression(), prop, computed);\n  },\n\n  call(superMember, args) {\n    return (0, _helperOptimiseCallExpression.default)(this.get(superMember), t.thisExpression(), args, false);\n  },\n\n  optionalCall(superMember, args) {\n    return (0, _helperOptimiseCallExpression.default)(this.get(superMember), t.thisExpression(), args, true);\n  }\n\n});\n\nclass ReplaceSupers {\n  constructor(opts) {\n    var _opts$constantSuper;\n\n    const path = opts.methodPath;\n    this.methodPath = path;\n    this.isDerivedConstructor = path.isClassMethod({\n      kind: \"constructor\"\n    }) && !!opts.superRef;\n    this.isStatic = path.isObjectMethod() || path.node.static || (path.isStaticBlock == null ? void 0 : path.isStaticBlock());\n    this.isPrivateMethod = path.isPrivate() && path.isMethod();\n    this.file = opts.file;\n    this.constantSuper = (_opts$constantSuper = opts.constantSuper) != null ? _opts$constantSuper : opts.isLoose;\n    this.opts = opts;\n  }\n\n  getObjectRef() {\n    return t.cloneNode(this.opts.objectRef || this.opts.getObjectRef());\n  }\n\n  getSuperRef() {\n    if (this.opts.superRef) return t.cloneNode(this.opts.superRef);\n    if (this.opts.getSuperRef) return t.cloneNode(this.opts.getSuperRef());\n  }\n\n  replace() {\n    if (this.opts.refToPreserve) {\n      this.methodPath.traverse(unshadowSuperBindingVisitor, {\n        refName: this.opts.refToPreserve.name\n      });\n    }\n\n    const handler = this.constantSuper ? looseHandlers : specHandlers;\n    (0, _helperMemberExpressionToFunctions.default)(this.methodPath, visitor, Object.assign({\n      file: this.file,\n      scope: this.methodPath.scope,\n      isDerivedConstructor: this.isDerivedConstructor,\n      isStatic: this.isStatic,\n      isPrivateMethod: this.isPrivateMethod,\n      getObjectRef: this.getObjectRef.bind(this),\n      getSuperRef: this.getSuperRef.bind(this),\n      boundGet: handler.get\n    }, handler));\n  }\n\n}\n\nexports.default = ReplaceSupers;"]},"metadata":{},"sourceType":"script"}