{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nfunction findParent(callback) {\n  var path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  var path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(function (p) {\n    return p.isFunction();\n  });\n}\n\nfunction getStatementParent() {\n  var path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    var earliest;\n    var keys = t.VISITOR_KEYS[deepest.type];\n\n    var _iterator = _createForOfIteratorHelper(ancestries),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var ancestry = _step.value;\n        var path = ancestry[i + 1];\n\n        if (!earliest) {\n          earliest = path;\n          continue;\n        }\n\n        if (path.listKey && earliest.listKey === path.listKey) {\n          if (path.key < earliest.key) {\n            earliest = path;\n            continue;\n          }\n        }\n\n        var earliestKeyIndex = keys.indexOf(earliest.parentKey);\n        var currentKeyIndex = keys.indexOf(path.parentKey);\n\n        if (earliestKeyIndex > currentKeyIndex) {\n          earliest = path;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  var _this = this;\n\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  var minDepth = Infinity;\n  var lastCommonIndex, lastCommon;\n  var ancestries = paths.map(function (path) {\n    var ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== _this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  var first = ancestries[0];\n\n  depthLoop: for (var i = 0; i < minDepth; i++) {\n    var shouldMatch = first[i];\n\n    var _iterator2 = _createForOfIteratorHelper(ancestries),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var ancestry = _step2.value;\n\n        if (ancestry[i] !== shouldMatch) {\n          break depthLoop;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  var path = this;\n  var paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(function (parent) {\n    return parent === maybeAncestor;\n  });\n}\n\nfunction inType() {\n  var path = this;\n\n  for (var _len = arguments.length, candidateTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    candidateTypes[_key] = arguments[_key];\n  }\n\n  while (path) {\n    var _iterator3 = _createForOfIteratorHelper(candidateTypes),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var type = _step3.value;\n        if (path.node.type === type) return true;\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/traverse/lib/path/ancestry.js"],"names":["Object","defineProperty","exports","value","findParent","find","getFunctionParent","getStatementParent","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","getAncestry","isAncestor","isDescendant","inType","t","require","_index","callback","path","parentPath","p","isFunction","Array","isArray","container","isStatement","isProgram","isFile","Error","paths","deepest","i","ancestries","earliest","keys","VISITOR_KEYS","type","ancestry","listKey","key","earliestKeyIndex","indexOf","parentKey","currentKeyIndex","filter","length","minDepth","Infinity","lastCommonIndex","lastCommon","map","unshift","first","depthLoop","shouldMatch","push","maybeDescendant","maybeAncestor","parent","candidateTypes","node"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}