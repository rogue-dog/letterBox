{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\letterBox\\\\src\\\\initialState.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useReducer, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet AppContext = /*#__PURE__*/createContext({});\nconst intialState = {\n  appName: \"letterBox\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setAppName\":\n      return { ...state,\n        appName: action.payload\n      };\n\n    default:\n      break;\n  }\n};\n\nfunction AppContextProvider(props) {\n  _s();\n\n  var AppState = { ...intialState\n  };\n  let [state, dispatch] = useReducer(reducer, AppState);\n  let value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"gmr64s7UwnSUUxpIMoxEm637jVU=\");\n\n_c = AppContextProvider;\n;\nexport default {\n  AppContext,\n  AppContextProvider\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/initialState.jsx"],"names":["React","useReducer","createContext","AppContext","intialState","appName","reducer","state","action","type","payload","AppContextProvider","props","AppState","dispatch","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;;AAEA,IAAIC,UAAU,gBAAGD,aAAa,CAAC,EAAD,CAA9B;AAGA,MAAME,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE;AADO,CAApB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AAEI,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAA5B,OAAP;;AAEJ;AACI;AANR;AASH,CAVD;;AAYA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAC/B,MAAIC,QAAQ,GAAG,EACX,GAAGT;AADQ,GAAf;AAGA,MAAI,CAACG,KAAD,EAAQO,QAAR,IAAoBb,UAAU,CAACK,OAAD,EAAUO,QAAV,CAAlC;AACA,MAAIE,KAAK,GAAG;AAAER,IAAAA,KAAF;AAASO,IAAAA;AAAT,GAAZ;AACA,sBACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA,cAAoCH,KAAK,CAACI;AAA1C;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GATQL,kB;;KAAAA,kB;AASR;AACD,eAAe;AAAER,EAAAA,UAAF;AAAcQ,EAAAA;AAAd,CAAf","sourcesContent":["import React from 'react';\r\nimport { useReducer, createContext } from \"react\";\r\n\r\nlet AppContext = createContext({});\r\n\r\n\r\nconst intialState = {\r\n    appName: \"letterBox\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"setAppName\":\r\n\r\n            return { ...state, appName: action.payload };\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n};\r\n\r\nfunction AppContextProvider(props) {\r\n    var AppState = {\r\n        ...intialState\r\n    };\r\n    let [state, dispatch] = useReducer(reducer, AppState);\r\n    let value = { state, dispatch };\r\n    return (\r\n        <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\r\n    );\r\n};\r\nexport default { AppContext, AppContextProvider };"]},"metadata":{},"sourceType":"module"}