{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\letterBox\\\\src\\\\pages\\\\ChatPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../initialState\";\nimport { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { IonContent, IonFooter, IonGrid, IonHeader, IonPage, IonRow, IonToolbar, IonCol, IonInput, IonButton, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\nimport db from \"../Firestore\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = () => {\n  _s();\n\n  let {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  let [message, setMessage] = useState(\"\");\n  let [allmsgs, msgsRecieved] = useState(false);\n  let messages = [];\n  let channel = state.user['phone'] + \"/\" + state.chattingWith.phone;\n\n  const sendMessage = async () => {\n    let message_body = {\n      content: message,\n      channel: channel,\n      dateTime: +Date.now(),\n      sentBy: state.user['phone'],\n      id: channel + this.dateTime\n    };\n\n    if (message) {\n      let k = await db.collection(\"messages\").add(message_body).then(() => {\n        alert(state.chattingWith.phone);\n      }).catch(error => {\n        alert(error);\n      });\n    } else {\n      alert(\"Cannot Send Empty messages!\");\n    }\n\n    setMessage(\"\");\n  };\n\n  const fetch_message = async () => {\n    let v = await db.collection(\"messages\").where(\"channel\", \"in\", [channel, channel.split(\"\").reverse().join(\"\")]).orderBy(\"dateTime\").limit(100).onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        messages.push(doc.data());\n      });\n    });\n    msgsRecieved(true);\n  }; // useIonViewWillEnter(() => { fetch_message() })\n\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: state.chattingWith.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: state.chattingWith.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonFooter, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: /*#__PURE__*/_jsxDEV(IonRow, {\n            children: [/*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"11\",\n              children: /*#__PURE__*/_jsxDEV(IonInput, {\n                id: \"Messagebox\",\n                value: message,\n                placeholder: \"Pour Your Heart Out..\",\n                onIonChange: e => {\n                  setMessage(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n              children: /*#__PURE__*/_jsxDEV(IonButton, {\n                size: \"2\",\n                onClick: e => {\n                  sendMessage();\n                },\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ChatPage, \"oG6ifE+nUdL7DxmuEcJzeTCk5vU=\");\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/pages/ChatPage.jsx"],"names":["React","useContext","AppContext","useState","IonContent","IonFooter","IonGrid","IonHeader","IonPage","IonRow","IonToolbar","IonCol","IonInput","IonButton","useIonViewDidEnter","useIonViewWillEnter","db","ChatPage","state","dispatch","message","setMessage","allmsgs","msgsRecieved","messages","channel","user","chattingWith","phone","sendMessage","message_body","content","dateTime","Date","now","sentBy","id","k","collection","add","then","alert","catch","error","fetch_message","v","where","split","reverse","join","orderBy","limit","onSnapshot","querySnapshot","forEach","doc","push","data","name","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../initialState\";\r\nimport { useState } from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport { IonContent, IonFooter, IonGrid, IonHeader, IonPage, IonRow, IonToolbar, IonCol, IonInput, IonButton, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\r\nimport db from \"../Firestore\";\r\nimport './styles.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ChatPage = () => {\r\n    let { state, dispatch } = useContext(AppContext);\r\n    let [message, setMessage] = useState(\"\");\r\n    let [allmsgs, msgsRecieved] = useState(false);\r\n    let messages = [];\r\n\r\n    let channel = state.user['phone'] + \"/\" + state.chattingWith.phone;\r\n    const sendMessage = async () => {\r\n\r\n        let message_body = {\r\n            content: message,\r\n            channel: channel,\r\n            dateTime: +Date.now(),\r\n            sentBy: state.user['phone'],\r\n            id: channel + this.dateTime\r\n        };\r\n        if (message) {\r\n            let k = await db.collection(\"messages\").add(message_body).then(() => {\r\n                alert(state.chattingWith.phone);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n        }\r\n        else {\r\n            alert(\"Cannot Send Empty messages!\");\r\n        }\r\n        setMessage(\"\");\r\n\r\n    }\r\n\r\n    const fetch_message = async () => {\r\n\r\n        let v = await db.collection(\"messages\").where(\"channel\", \"in\", [channel, channel.split(\"\").reverse().join(\"\")])\r\n            .orderBy(\"dateTime\").limit(100).onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    messages.push(doc.data());\r\n                });\r\n            });\r\n        msgsRecieved(true);\r\n\r\n    }\r\n    // useIonViewWillEnter(() => { fetch_message() })\r\n\r\n\r\n\r\n\r\n    return (<IonPage>\r\n        <IonHeader>{state.chattingWith.name}</IonHeader>\r\n        <IonContent>\r\n            <p>{state.chattingWith.phone}</p>\r\n\r\n\r\n        </IonContent>\r\n\r\n        <IonFooter>\r\n            <IonToolbar>\r\n                <IonGrid>\r\n                    <IonRow>\r\n                        <IonCol size=\"11\" >\r\n\r\n                            <IonInput id=\"Messagebox\" value={message} placeholder=\"Pour Your Heart Out..\" onIonChange={(e) => { setMessage(e.target.value) }}></IonInput>\r\n                        </IonCol>\r\n                        <IonCol >\r\n\r\n                            <IonButton size=\"2\" onClick={(e) => { sendMessage() }}>Send</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonGrid>\r\n            </IonToolbar>\r\n\r\n        </IonFooter>\r\n\r\n    </IonPage>\r\n    );\r\n}\r\n\r\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}