{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _regeneratorRuntime = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(resolveRootMode),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPrivatePartialConfig);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  var data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction resolveRootMode(rootDir, rootMode) {\n  var upwardRootDir, _upwardRootDir;\n\n  return _regeneratorRuntime.wrap(function resolveRootMode$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = rootMode;\n          _context.next = _context.t0 === \"root\" ? 3 : _context.t0 === \"upward-optional\" ? 4 : _context.t0 === \"upward\" ? 7 : 12;\n          break;\n\n        case 3:\n          return _context.abrupt(\"return\", rootDir);\n\n        case 4:\n          return _context.delegateYield((0, _files.findConfigUpwards)(rootDir), \"t1\", 5);\n\n        case 5:\n          upwardRootDir = _context.t1;\n          return _context.abrupt(\"return\", upwardRootDir === null ? rootDir : upwardRootDir);\n\n        case 7:\n          return _context.delegateYield((0, _files.findConfigUpwards)(rootDir), \"t2\", 8);\n\n        case 8:\n          _upwardRootDir = _context.t2;\n\n          if (!(_upwardRootDir !== null)) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", _upwardRootDir);\n\n        case 11:\n          throw Object.assign(new Error(\"Babel was run with rootMode:\\\"upward\\\" but a root could not \" + \"be found when searching upward from \\\"\".concat(rootDir, \"\\\".\\n\") + \"One of the following config files must be in the directory tree: \" + \"\\\"\".concat(_files.ROOT_CONFIG_FILENAMES.join(\", \"), \"\\\".\")), {\n            code: \"BABEL_ROOT_NOT_FOUND\",\n            dirname: rootDir\n          });\n\n        case 12:\n          throw new Error(\"Assertion failure - unknown rootMode value.\");\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction loadPrivatePartialConfig(inputOpts) {\n  var args, _args$envName, envName, _args$cwd, cwd, _args$root, rootDir, _args$rootMode, rootMode, caller, _args$cloneInputAst, cloneInputAst, absoluteCwd, absoluteRootDir, filename, showConfigPath, context, configChain, options;\n\n  return _regeneratorRuntime.wrap(function loadPrivatePartialConfig$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts)))) {\n            _context2.next = 2;\n            break;\n          }\n\n          throw new Error(\"Babel options must be an object, null, or undefined\");\n\n        case 2:\n          args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n          _args$envName = args.envName, envName = _args$envName === void 0 ? (0, _environment.getEnv)() : _args$envName, _args$cwd = args.cwd, cwd = _args$cwd === void 0 ? \".\" : _args$cwd, _args$root = args.root, rootDir = _args$root === void 0 ? \".\" : _args$root, _args$rootMode = args.rootMode, rootMode = _args$rootMode === void 0 ? \"root\" : _args$rootMode, caller = args.caller, _args$cloneInputAst = args.cloneInputAst, cloneInputAst = _args$cloneInputAst === void 0 ? true : _args$cloneInputAst;\n          absoluteCwd = _path().default.resolve(cwd);\n          return _context2.delegateYield(resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode), \"t0\", 6);\n\n        case 6:\n          absoluteRootDir = _context2.t0;\n          filename = typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined;\n          return _context2.delegateYield((0, _files.resolveShowConfigPath)(absoluteCwd), \"t1\", 9);\n\n        case 9:\n          showConfigPath = _context2.t1;\n          context = {\n            filename: filename,\n            cwd: absoluteCwd,\n            root: absoluteRootDir,\n            envName: envName,\n            caller: caller,\n            showConfig: showConfigPath === filename\n          };\n          return _context2.delegateYield((0, _configChain.buildRootChain)(args, context), \"t2\", 12);\n\n        case 12:\n          configChain = _context2.t2;\n\n          if (configChain) {\n            _context2.next = 15;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 15:\n          options = {};\n          configChain.options.forEach(function (opts) {\n            (0, _util.mergeOptions)(options, opts);\n          });\n          options.cloneInputAst = cloneInputAst;\n          options.babelrc = false;\n          options.configFile = false;\n          options.passPerPreset = false;\n          options.envName = context.envName;\n          options.cwd = context.cwd;\n          options.root = context.root;\n          options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n          options.plugins = configChain.plugins.map(function (descriptor) {\n            return (0, _item.createItemFromDescriptor)(descriptor);\n          });\n          options.presets = configChain.presets.map(function (descriptor) {\n            return (0, _item.createItemFromDescriptor)(descriptor);\n          });\n          return _context2.abrupt(\"return\", {\n            options: options,\n            context: context,\n            fileHandling: configChain.fileHandling,\n            ignore: configChain.ignore,\n            babelrc: configChain.babelrc,\n            config: configChain.config,\n            files: configChain.files\n          });\n\n        case 28:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar loadPartialConfig = (0, _gensync().default)( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(opts) {\n  var showIgnoredFiles, _opts, result, options, babelrc, ignore, config, fileHandling, files;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          showIgnoredFiles = false;\n\n          if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n            _opts = opts;\n            showIgnoredFiles = _opts.showIgnoredFiles;\n            opts = _objectWithoutPropertiesLoose(_opts, [\"showIgnoredFiles\"]);\n            _opts;\n          }\n\n          return _context3.delegateYield(loadPrivatePartialConfig(opts), \"t0\", 3);\n\n        case 3:\n          result = _context3.t0;\n\n          if (result) {\n            _context3.next = 6;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 6:\n          options = result.options, babelrc = result.babelrc, ignore = result.ignore, config = result.config, fileHandling = result.fileHandling, files = result.files;\n\n          if (!(fileHandling === \"ignored\" && !showIgnoredFiles)) {\n            _context3.next = 9;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 9:\n          (options.plugins || []).forEach(function (item) {\n            if (item.value instanceof _plugin.default) {\n              throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n            }\n          });\n          return _context3.abrupt(\"return\", new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined, fileHandling, files));\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee);\n}));\nexports.loadPartialConfig = loadPartialConfig;\n\nvar PartialConfig = /*#__PURE__*/function () {\n  function PartialConfig(options, babelrc, ignore, config, fileHandling, files) {\n    _classCallCheck(this, PartialConfig);\n\n    this.options = void 0;\n    this.babelrc = void 0;\n    this.babelignore = void 0;\n    this.config = void 0;\n    this.fileHandling = void 0;\n    this.files = void 0;\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n    Object.freeze(this);\n  }\n\n  _createClass(PartialConfig, [{\n    key: \"hasFilesystemConfig\",\n    value: function hasFilesystemConfig() {\n      return this.babelrc !== undefined || this.config !== undefined;\n    }\n  }]);\n\n  return PartialConfig;\n}();\n\nObject.freeze(PartialConfig.prototype);","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/core/lib/config/partial.js"],"names":["resolveRootMode","loadPrivatePartialConfig","Object","defineProperty","exports","value","default","loadPartialConfig","_path","data","_interopRequireDefault","require","_gensync","_plugin","_util","_item","_configChain","_environment","_options","_files","obj","__esModule","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","key","i","length","indexOf","rootDir","rootMode","findConfigUpwards","upwardRootDir","assign","Error","ROOT_CONFIG_FILENAMES","join","code","dirname","inputOpts","Array","isArray","args","validate","envName","getEnv","cwd","root","caller","cloneInputAst","absoluteCwd","resolve","absoluteRootDir","filename","undefined","resolveShowConfigPath","showConfigPath","context","showConfig","buildRootChain","configChain","options","forEach","opts","mergeOptions","babelrc","configFile","passPerPreset","plugins","map","descriptor","createItemFromDescriptor","presets","fileHandling","ignore","config","files","showIgnoredFiles","_opts","result","item","PartialConfig","filepath","babelignore","freeze","prototype"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction* resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true\n  } = args;\n\n  const absoluteCwd = _path().default.resolve(cwd);\n\n  const absoluteRootDir = yield* resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode);\n  const filename = typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined;\n  const showConfigPath = yield* (0, _files.resolveShowConfigPath)(absoluteCwd);\n  const context = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const options = {};\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(options, opts);\n  });\n  options.cloneInputAst = cloneInputAst;\n  options.babelrc = false;\n  options.configFile = false;\n  options.passPerPreset = false;\n  options.envName = context.envName;\n  options.cwd = context.cwd;\n  options.root = context.root;\n  options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n  options.plugins = configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  options.presets = configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files\n  };\n}\n\nconst loadPartialConfig = (0, _gensync().default)(function* (opts) {\n  let showIgnoredFiles = false;\n\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    var _opts = opts;\n    ({\n      showIgnoredFiles\n    } = _opts);\n    opts = _objectWithoutPropertiesLoose(_opts, [\"showIgnoredFiles\"]);\n    _opts;\n  }\n\n  const result = yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config,\n    fileHandling,\n    files\n  } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined, fileHandling, files);\n});\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config, fileHandling, files) {\n    this.options = void 0;\n    this.babelrc = void 0;\n    this.babelignore = void 0;\n    this.config = void 0;\n    this.fileHandling = void 0;\n    this.files = void 0;\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);"]},"metadata":{},"sourceType":"script"}