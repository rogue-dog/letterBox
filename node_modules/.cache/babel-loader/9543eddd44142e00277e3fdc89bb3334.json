{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _taggedTemplateLiteral = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toConsumableArray = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nexports.wrapInterop = wrapInterop;\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function get() {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function get() {\n    return _rewriteThis.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function get() {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function get() {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function get() {\n    return _getModuleName.default;\n  }\n});\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, _ref) {\n  var loose = _ref.loose,\n      exportName = _ref.exportName,\n      strict = _ref.strict,\n      allowTopLevelThis = _ref.allowTopLevelThis,\n      strictMode = _ref.strictMode,\n      noInterop = _ref.noInterop,\n      _ref$importInterop = _ref.importInterop,\n      importInterop = _ref$importInterop === void 0 ? noInterop ? \"none\" : \"babel\" : _ref$importInterop,\n      lazy = _ref.lazy,\n      esNamespaceOnly = _ref.esNamespaceOnly,\n      _ref$constantReexport = _ref.constantReexports,\n      constantReexports = _ref$constantReexport === void 0 ? loose : _ref$constantReexport,\n      _ref$enumerableModule = _ref.enumerableModuleMeta,\n      enumerableModuleMeta = _ref$enumerableModule === void 0 ? loose : _ref$enumerableModule,\n      noIncompleteNsImportDetection = _ref.noIncompleteNsImportDetection;\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  var meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop: importInterop,\n    initializeReexports: constantReexports,\n    lazy: lazy,\n    esNamespaceOnly: esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    var hasStrict = path.node.directives.some(function (directive) {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n    }\n  }\n\n  var headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  var nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push.apply(headers, _toConsumableArray(buildExportInitializationStatements(path, meta, constantReexports, noIncompleteNsImportDetection)));\n  return {\n    meta: meta,\n    headers: headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(function (header) {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return t.callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, t.booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  var helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(\"Unknown interop: \".concat(type));\n  }\n\n  return t.callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata) {\n  var constantReexports = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var statements = [];\n  var srcNamespace = t.identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);\n\n  var _iterator = _createForOfIteratorHelper(sourceMetadata.importsNamespace),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var localName = _step.value;\n      if (localName === sourceMetadata.name) continue;\n      statements.push(_template.default.statement(_templateObject || (_templateObject = _taggedTemplateLiteral([\"var NAME = SOURCE;\"])))({\n        NAME: localName,\n        SOURCE: t.cloneNode(srcNamespace)\n      }));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (constantReexports) {\n    statements.push.apply(statements, _toConsumableArray(buildReexportsFromMeta(metadata, sourceMetadata, true)));\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(sourceMetadata.reexportNamespace),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var exportName = _step2.value;\n      statements.push((sourceMetadata.lazy ? _template.default.statement(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            Object.defineProperty(EXPORTS, \\\"NAME\\\", {\\n              enumerable: true,\\n              get: function() {\\n                return NAMESPACE;\\n              }\\n            });\\n          \"]))) : _template.default.statement(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"EXPORTS.NAME = NAMESPACE;\"]))))({\n        EXPORTS: metadata.exportName,\n        NAME: exportName,\n        NAMESPACE: t.cloneNode(srcNamespace)\n      }));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (sourceMetadata.reexportAll) {\n    var statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nvar ReexportTemplate = {\n  constant: _template.default.statement(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;\"]))),\n  constantComputed: _template.default.statement(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"EXPORTS[\\\"EXPORT_NAME\\\"] = NAMESPACE_IMPORT;\"]))),\n  spec: (0, _template.default)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    Object.defineProperty(EXPORTS, \\\"EXPORT_NAME\\\", {\\n      enumerable: true,\\n      get: function() {\\n        return NAMESPACE_IMPORT;\\n      },\\n    });\\n    \"])))\n};\n\nvar buildReexportsFromMeta = function buildReexportsFromMeta(meta, metadata, constantReexports) {\n  var namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);\n  var stringSpecifiers = meta.stringSpecifiers;\n  return Array.from(metadata.reexports, function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        exportName = _ref3[0],\n        importName = _ref3[1];\n\n    var NAMESPACE_IMPORT = t.cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.identifier(importName));\n    }\n\n    var astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT: NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || t.isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata) {\n  var enumerableModuleMeta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (enumerableModuleMeta ? _template.default.statement(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n        EXPORTS.__esModule = true;\\n      \"]))) : _template.default.statement(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n        Object.defineProperty(EXPORTS, \\\"__esModule\\\", {\\n          value: true,\\n        });\\n      \"]))))({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n        Object.keys(NAMESPACE).forEach(function(key) {\\n          if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n          VERIFY_NAME_LIST;\\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\\n\\n          EXPORTS[key] = NAMESPACE[key];\\n        });\\n      \"]))) : _template.default.statement(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n        Object.keys(NAMESPACE).forEach(function(key) {\\n          if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n          VERIFY_NAME_LIST;\\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\\n\\n          Object.defineProperty(EXPORTS, key, {\\n            enumerable: true,\\n            get: function() {\\n              return NAMESPACE[key];\\n            },\\n          });\\n        });\\n    \"]))))({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\\n          \"])))({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  var exportedVars = Object.create(null);\n\n  var _iterator3 = _createForOfIteratorHelper(metadata.local.values()),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var data = _step3.value;\n\n      var _iterator5 = _createForOfIteratorHelper(data.names),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _name = _step5.value;\n          exportedVars[_name] = true;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  var hasReexport = false;\n\n  var _iterator4 = _createForOfIteratorHelper(metadata.source.values()),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _data = _step4.value;\n\n      var _iterator6 = _createForOfIteratorHelper(_data.reexports.keys()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var exportName = _step6.value;\n          exportedVars[exportName] = true;\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var _iterator7 = _createForOfIteratorHelper(_data.reexportNamespace),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _exportName = _step7.value;\n          exportedVars[_exportName] = true;\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      hasReexport = hasReexport || !!_data.reexportAll;\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  var name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: t.variableDeclaration(\"var\", [t.variableDeclarator(name, t.valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata) {\n  var constantReexports = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var noIncompleteNsImportDetection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var initStatements = [];\n  var exportNames = [];\n\n  var _iterator8 = _createForOfIteratorHelper(metadata.local),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var _step8$value = _slicedToArray(_step8.value, 2),\n          localName = _step8$value[0],\n          data = _step8$value[1];\n\n      if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n        initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));\n      } else {\n        exportNames.push.apply(exportNames, _toConsumableArray(data.names));\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  var _iterator9 = _createForOfIteratorHelper(metadata.source.values()),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var _data2 = _step9.value;\n\n      if (!constantReexports) {\n        initStatements.push.apply(initStatements, _toConsumableArray(buildReexportsFromMeta(metadata, _data2, false)));\n      }\n\n      var _iterator10 = _createForOfIteratorHelper(_data2.reexportNamespace),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var exportName = _step10.value;\n          exportNames.push(exportName);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  if (!noIncompleteNsImportDetection) {\n    initStatements.push.apply(initStatements, _toConsumableArray(chunk(exportNames, 100).map(function (members) {\n      return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());\n    })));\n  }\n\n  return initStatements;\n}\n\nvar InitTemplate = {\n  computed: _template.default.expression(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"EXPORTS[\\\"NAME\\\"] = VALUE\"]))),\n  default: _template.default.expression(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"EXPORTS.NAME = VALUE\"])))\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  var stringSpecifiers = metadata.stringSpecifiers,\n      EXPORTS = metadata.exportName;\n  return t.expressionStatement(exportNames.reduce(function (acc, exportName) {\n    var params = {\n      EXPORTS: EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}\n\nfunction chunk(array, size) {\n  var chunks = [];\n\n  for (var i = 0; i < array.length; i += size) {\n    chunks.push(array.slice(i, i + size));\n  }\n\n  return chunks;\n}","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/helper-module-transforms/lib/index.js"],"names":["Object","defineProperty","exports","value","rewriteModuleStatementsAndPrepareHeader","ensureStatementsHoisted","wrapInterop","buildNamespaceInitStatements","enumerable","get","_helperModuleImports","isModule","_rewriteThis","default","_normalizeAndLoadMetadata","hasExports","isSideEffectImport","_getModuleName","_assert","require","t","_template","_rewriteLiveReferences","path","loose","exportName","strict","allowTopLevelThis","strictMode","noInterop","importInterop","lazy","esNamespaceOnly","constantReexports","enumerableModuleMeta","noIncompleteNsImportDetection","validateImportInteropOption","node","sourceType","meta","initializeReexports","hasStrict","directives","some","directive","unshiftContainer","directiveLiteral","headers","push","buildESModuleHeader","nameList","buildExportNameListDeclaration","exportNameListName","name","statement","buildExportInitializationStatements","statements","forEach","header","_blockHoist","programPath","expr","type","callExpression","hub","addHelper","booleanLiteral","helper","Error","metadata","sourceMetadata","srcNamespace","identifier","importsNamespace","localName","NAME","SOURCE","cloneNode","buildReexportsFromMeta","reexportNamespace","EXPORTS","NAMESPACE","reexportAll","buildNamespaceReexport","loc","ReexportTemplate","constant","constantComputed","spec","namespace","stringSpecifiers","Array","from","reexports","importName","NAMESPACE_IMPORT","interop","has","memberExpression","stringLiteral","astNodes","EXPORT_NAME","isIdentifier","VERIFY_NAME_LIST","EXPORTS_LIST","exportedVars","create","local","values","data","names","hasReexport","source","keys","length","scope","generateUidIdentifier","variableDeclaration","variableDeclarator","valueToNode","initStatements","exportNames","kind","buildInitStatement","chunk","map","members","buildUndefinedNode","InitTemplate","computed","expression","initExpr","expressionStatement","reduce","acc","params","VALUE","array","size","chunks","i","slice"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nexports.wrapInterop = wrapInterop;\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  loose,\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  noInterop,\n  importInterop = noInterop ? \"none\" : \"babel\",\n  lazy,\n  esNamespaceOnly,\n  constantReexports = loose,\n  enumerableModuleMeta = loose,\n  noIncompleteNsImportDetection\n}) {\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop,\n    initializeReexports: constantReexports,\n    lazy,\n    esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, constantReexports, noIncompleteNsImportDetection));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return t.callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, t.booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return t.callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, constantReexports = false) {\n  const statements = [];\n  let srcNamespace = t.identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (constantReexports) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, true));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  constant: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  constantComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: (0, _template.default)`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, constantReexports) => {\n  const namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT = t.cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || t.isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerableModuleMeta = false) {\n  return (enumerableModuleMeta ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || !!data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: t.variableDeclaration(\"var\", [t.variableDeclarator(name, t.valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, constantReexports = false, noIncompleteNsImportDetection = false) {\n  const initStatements = [];\n  const exportNames = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));\n    } else {\n      exportNames.push(...data.names);\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!constantReexports) {\n      initStatements.push(...buildReexportsFromMeta(metadata, data, false));\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportNames.push(exportName);\n    }\n  }\n\n  if (!noIncompleteNsImportDetection) {\n    initStatements.push(...chunk(exportNames, 100).map(members => {\n      return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());\n    }));\n  }\n\n  return initStatements;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return t.expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}\n\nfunction chunk(array, size) {\n  const chunks = [];\n\n  for (let i = 0; i < array.length; i += size) {\n    chunks.push(array.slice(i, i + size));\n  }\n\n  return chunks;\n}"]},"metadata":{},"sourceType":"script"}