{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(findConfigUpwards),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(findPackageData),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(findRelativeConfig),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(findRootConfig),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadConfig),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(resolveShowConfigPath);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findPackageData = findPackageData;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.resolveShowConfigPath = resolveShowConfigPath;\nexports.resolvePlugin = resolvePlugin;\nexports.resolvePreset = resolvePreset;\nexports.loadPlugin = loadPlugin;\nexports.loadPreset = loadPreset;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction findConfigUpwards(rootDir) {\n  return _regeneratorRuntime.wrap(function findConfigUpwards$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", null);\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction findPackageData(filepath) {\n  return _regeneratorRuntime.wrap(function findPackageData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", {\n            filepath: filepath,\n            directories: [],\n            pkg: null,\n            isPackage: false\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction findRelativeConfig(pkgData, envName, caller) {\n  return _regeneratorRuntime.wrap(function findRelativeConfig$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", {\n            pkg: null,\n            config: null,\n            ignore: null\n          });\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction findRootConfig(dirname, envName, caller) {\n  return _regeneratorRuntime.wrap(function findRootConfig$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", null);\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction loadConfig(name, dirname, envName, caller) {\n  return _regeneratorRuntime.wrap(function loadConfig$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          throw new Error(\"Cannot load \".concat(name, \" relative to \").concat(dirname, \" in a browser\"));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction resolveShowConfigPath(dirname) {\n  return _regeneratorRuntime.wrap(function resolveShowConfigPath$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", null);\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nvar ROOT_CONFIG_FILENAMES = [];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\n\nfunction resolvePlugin(name, dirname) {\n  return null;\n}\n\nfunction resolvePreset(name, dirname) {\n  return null;\n}\n\nfunction loadPlugin(name, dirname) {\n  throw new Error(\"Cannot load plugin \".concat(name, \" relative to \").concat(dirname, \" in a browser\"));\n}\n\nfunction loadPreset(name, dirname) {\n  throw new Error(\"Cannot load preset \".concat(name, \" relative to \").concat(dirname, \" in a browser\"));\n}","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/core/lib/config/files/index-browser.js"],"names":["findConfigUpwards","findPackageData","findRelativeConfig","findRootConfig","loadConfig","resolveShowConfigPath","Object","defineProperty","exports","value","resolvePlugin","resolvePreset","loadPlugin","loadPreset","ROOT_CONFIG_FILENAMES","rootDir","filepath","directories","pkg","isPackage","pkgData","envName","caller","config","ignore","dirname","name","Error"],"mappings":"AAAA;;;;oDAiBUA,iB;qDAIAC,e;qDASAC,kB;qDAQAC,c;qDAIAC,U;qDAIAC,qB;;AA5CVC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACR,iBAAR,GAA4BA,iBAA5B;AACAQ,OAAO,CAACP,eAAR,GAA0BA,eAA1B;AACAO,OAAO,CAACN,kBAAR,GAA6BA,kBAA7B;AACAM,OAAO,CAACL,cAAR,GAAyBA,cAAzB;AACAK,OAAO,CAACJ,UAAR,GAAqBA,UAArB;AACAI,OAAO,CAACH,qBAAR,GAAgCA,qBAAhC;AACAG,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACAF,OAAO,CAACG,aAAR,GAAwBA,aAAxB;AACAH,OAAO,CAACI,UAAR,GAAqBA,UAArB;AACAJ,OAAO,CAACK,UAAR,GAAqBA,UAArB;AACAL,OAAO,CAACM,qBAAR,GAAgC,KAAK,CAArC;;AAEA,SAAUd,iBAAV,CAA4Be,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,2CACS,IADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUd,eAAV,CAA0Be,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,4CACS;AACLA,YAAAA,QAAQ,EAARA,QADK;AAELC,YAAAA,WAAW,EAAE,EAFR;AAGLC,YAAAA,GAAG,EAAE,IAHA;AAILC,YAAAA,SAAS,EAAE;AAJN,WADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUjB,kBAAV,CAA6BkB,OAA7B,EAAsCC,OAAtC,EAA+CC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,4CACS;AACLJ,YAAAA,GAAG,EAAE,IADA;AAELK,YAAAA,MAAM,EAAE,IAFH;AAGLC,YAAAA,MAAM,EAAE;AAHH,WADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAUrB,cAAV,CAAyBsB,OAAzB,EAAkCJ,OAAlC,EAA2CC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,4CACS,IADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUlB,UAAV,CAAqBsB,IAArB,EAA2BD,OAA3B,EAAoCJ,OAApC,EAA6CC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,IAAIK,KAAJ,uBAAyBD,IAAzB,0BAA6CD,OAA7C,mBADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUpB,qBAAV,CAAgCoB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,4CACS,IADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAMX,qBAAqB,GAAG,EAA9B;AACAN,OAAO,CAACM,qBAAR,GAAgCA,qBAAhC;;AAEA,SAASJ,aAAT,CAAuBgB,IAAvB,EAA6BD,OAA7B,EAAsC;AACpC,SAAO,IAAP;AACD;;AAED,SAASd,aAAT,CAAuBe,IAAvB,EAA6BD,OAA7B,EAAsC;AACpC,SAAO,IAAP;AACD;;AAED,SAASb,UAAT,CAAoBc,IAApB,EAA0BD,OAA1B,EAAmC;AACjC,QAAM,IAAIE,KAAJ,8BAAgCD,IAAhC,0BAAoDD,OAApD,mBAAN;AACD;;AAED,SAASZ,UAAT,CAAoBa,IAApB,EAA0BD,OAA1B,EAAmC;AACjC,QAAM,IAAIE,KAAJ,8BAAgCD,IAAhC,0BAAoDD,OAApD,mBAAN;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findPackageData = findPackageData;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.resolveShowConfigPath = resolveShowConfigPath;\nexports.resolvePlugin = resolvePlugin;\nexports.resolvePreset = resolvePreset;\nexports.loadPlugin = loadPlugin;\nexports.loadPreset = loadPreset;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction* findConfigUpwards(rootDir) {\n  return null;\n}\n\nfunction* findPackageData(filepath) {\n  return {\n    filepath,\n    directories: [],\n    pkg: null,\n    isPackage: false\n  };\n}\n\nfunction* findRelativeConfig(pkgData, envName, caller) {\n  return {\n    pkg: null,\n    config: null,\n    ignore: null\n  };\n}\n\nfunction* findRootConfig(dirname, envName, caller) {\n  return null;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);\n}\n\nfunction* resolveShowConfigPath(dirname) {\n  return null;\n}\n\nconst ROOT_CONFIG_FILENAMES = [];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\n\nfunction resolvePlugin(name, dirname) {\n  return null;\n}\n\nfunction resolvePreset(name, dirname) {\n  return null;\n}\n\nfunction loadPlugin(name, dirname) {\n  throw new Error(`Cannot load plugin ${name} relative to ${dirname} in a browser`);\n}\n\nfunction loadPreset(name, dirname) {\n  throw new Error(`Cannot load preset ${name} relative to ${dirname} in a browser`);\n}"]},"metadata":{},"sourceType":"script"}