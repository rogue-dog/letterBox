{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _toConsumableArray = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigPrinter = exports.ChainFormatter = void 0;\nvar ChainFormatter = {\n  Programmatic: 0,\n  Config: 1\n};\nexports.ChainFormatter = ChainFormatter;\nvar Formatter = {\n  title: function title(type, callerName, filepath) {\n    var title = \"\";\n\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n\n    return title;\n  },\n  loc: function loc(index, envName) {\n    var loc = \"\";\n\n    if (index != null) {\n      loc += \".overrides[\".concat(index, \"]\");\n    }\n\n    if (envName != null) {\n      loc += \".env[\\\"\".concat(envName, \"\\\"]\");\n    }\n\n    return loc;\n  },\n  optionsAndDescriptors: function optionsAndDescriptors(opt) {\n    var content = Object.assign({}, opt.options);\n    delete content.overrides;\n    delete content.env;\n\n    var pluginDescriptors = _toConsumableArray(opt.plugins());\n\n    if (pluginDescriptors.length) {\n      content.plugins = pluginDescriptors.map(function (d) {\n        return descriptorToConfig(d);\n      });\n    }\n\n    var presetDescriptors = _toConsumableArray(opt.presets());\n\n    if (presetDescriptors.length) {\n      content.presets = _toConsumableArray(presetDescriptors).map(function (d) {\n        return descriptorToConfig(d);\n      });\n    }\n\n    return JSON.stringify(content, undefined, 2);\n  }\n};\n\nfunction descriptorToConfig(d) {\n  var _d$file;\n\n  var name = (_d$file = d.file) == null ? void 0 : _d$file.request;\n\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      name = \"[Function: \".concat(d.value.toString().substr(0, 50), \" ... ]\");\n    }\n  }\n\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nvar ConfigPrinter = /*#__PURE__*/function () {\n  function ConfigPrinter() {\n    _classCallCheck(this, ConfigPrinter);\n\n    this._stack = [];\n  }\n\n  _createClass(ConfigPrinter, [{\n    key: \"configure\",\n    value: function configure(enabled, type, _ref) {\n      var _this = this;\n\n      var callerName = _ref.callerName,\n          filepath = _ref.filepath;\n      if (!enabled) return function () {};\n      return function (content, index, envName) {\n        _this._stack.push({\n          type: type,\n          callerName: callerName,\n          filepath: filepath,\n          content: content,\n          index: index,\n          envName: envName\n        });\n      };\n    }\n  }, {\n    key: \"output\",\n    value: function output() {\n      if (this._stack.length === 0) return \"\";\n      return this._stack.map(function (s) {\n        return ConfigPrinter.format(s);\n      }).join(\"\\n\\n\");\n    }\n  }], [{\n    key: \"format\",\n    value: function format(config) {\n      var title = Formatter.title(config.type, config.callerName, config.filepath);\n      var loc = Formatter.loc(config.index, config.envName);\n      if (loc) title += \" \".concat(loc);\n      var content = Formatter.optionsAndDescriptors(config.content);\n      return \"\".concat(title, \"\\n\").concat(content);\n    }\n  }]);\n\n  return ConfigPrinter;\n}();\n\nexports.ConfigPrinter = ConfigPrinter;","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/core/lib/config/printer.js"],"names":["Object","defineProperty","exports","value","ConfigPrinter","ChainFormatter","Programmatic","Config","Formatter","title","type","callerName","filepath","loc","index","envName","optionsAndDescriptors","opt","content","assign","options","overrides","env","pluginDescriptors","plugins","length","map","d","descriptorToConfig","presetDescriptors","presets","JSON","stringify","undefined","_d$file","name","file","request","toString","substr","_stack","enabled","push","s","format","join","config"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigPrinter = exports.ChainFormatter = void 0;\nconst ChainFormatter = {\n  Programmatic: 0,\n  Config: 1\n};\nexports.ChainFormatter = ChainFormatter;\nconst Formatter = {\n  title(type, callerName, filepath) {\n    let title = \"\";\n\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n\n    return title;\n  },\n\n  loc(index, envName) {\n    let loc = \"\";\n\n    if (index != null) {\n      loc += `.overrides[${index}]`;\n    }\n\n    if (envName != null) {\n      loc += `.env[\"${envName}\"]`;\n    }\n\n    return loc;\n  },\n\n  optionsAndDescriptors(opt) {\n    const content = Object.assign({}, opt.options);\n    delete content.overrides;\n    delete content.env;\n    const pluginDescriptors = [...opt.plugins()];\n\n    if (pluginDescriptors.length) {\n      content.plugins = pluginDescriptors.map(d => descriptorToConfig(d));\n    }\n\n    const presetDescriptors = [...opt.presets()];\n\n    if (presetDescriptors.length) {\n      content.presets = [...presetDescriptors].map(d => descriptorToConfig(d));\n    }\n\n    return JSON.stringify(content, undefined, 2);\n  }\n\n};\n\nfunction descriptorToConfig(d) {\n  var _d$file;\n\n  let name = (_d$file = d.file) == null ? void 0 : _d$file.request;\n\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      name = `[Function: ${d.value.toString().substr(0, 50)} ... ]`;\n    }\n  }\n\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nclass ConfigPrinter {\n  constructor() {\n    this._stack = [];\n  }\n\n  configure(enabled, type, {\n    callerName,\n    filepath\n  }) {\n    if (!enabled) return () => {};\n    return (content, index, envName) => {\n      this._stack.push({\n        type,\n        callerName,\n        filepath,\n        content,\n        index,\n        envName\n      });\n    };\n  }\n\n  static format(config) {\n    let title = Formatter.title(config.type, config.callerName, config.filepath);\n    const loc = Formatter.loc(config.index, config.envName);\n    if (loc) title += ` ${loc}`;\n    const content = Formatter.optionsAndDescriptors(config.content);\n    return `${title}\\n${content}`;\n  }\n\n  output() {\n    if (this._stack.length === 0) return \"\";\n    return this._stack.map(s => ConfigPrinter.format(s)).join(\"\\n\\n\");\n  }\n\n}\n\nexports.ConfigPrinter = ConfigPrinter;"]},"metadata":{},"sourceType":"script"}