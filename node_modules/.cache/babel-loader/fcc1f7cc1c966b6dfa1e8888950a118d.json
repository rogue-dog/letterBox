{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(normalizeFile);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeFile;\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  var data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function _debug() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cloneDeep() {\n  var data = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\n  _cloneDeep = function _cloneDeep() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction t() {\n  var data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function t() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _convertSourceMap() {\n  var data = _interopRequireDefault(require(\"convert-source-map\"));\n\n  _convertSourceMap = function _convertSourceMap() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = _interopRequireDefault(require(\"./file/file\"));\n\nvar _parser = _interopRequireDefault(require(\"../parser\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar debug = (0, _debug().default)(\"babel:transform:file\");\nvar LARGE_INPUT_SOURCEMAP_THRESHOLD = 1000000;\n\nfunction normalizeFile(pluginPasses, options, code, ast) {\n  var cloneInputAst, inputMap, lastComment, _lastComment, match, inputMapContent;\n\n  return _regeneratorRuntime.wrap(function normalizeFile$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          code = \"\".concat(code || \"\");\n\n          if (!ast) {\n            _context.next = 12;\n            break;\n          }\n\n          if (!(ast.type === \"Program\")) {\n            _context.next = 6;\n            break;\n          }\n\n          ast = t().file(ast, [], []);\n          _context.next = 8;\n          break;\n\n        case 6:\n          if (!(ast.type !== \"File\")) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"AST root must be a Program or File node\");\n\n        case 8:\n          cloneInputAst = options.cloneInputAst;\n\n          if (cloneInputAst) {\n            ast = (0, _cloneDeep().default)(ast);\n          }\n\n          _context.next = 14;\n          break;\n\n        case 12:\n          return _context.delegateYield((0, _parser.default)(pluginPasses, options, code), \"t0\", 13);\n\n        case 13:\n          ast = _context.t0;\n\n        case 14:\n          inputMap = null;\n\n          if (options.inputSourceMap !== false) {\n            if (typeof options.inputSourceMap === \"object\") {\n              inputMap = _convertSourceMap().default.fromObject(options.inputSourceMap);\n            }\n\n            if (!inputMap) {\n              lastComment = extractComments(INLINE_SOURCEMAP_REGEX, ast);\n\n              if (lastComment) {\n                try {\n                  inputMap = _convertSourceMap().default.fromComment(lastComment);\n                } catch (err) {\n                  debug(\"discarding unknown inline input sourcemap\", err);\n                }\n              }\n            }\n\n            if (!inputMap) {\n              _lastComment = extractComments(EXTERNAL_SOURCEMAP_REGEX, ast);\n\n              if (typeof options.filename === \"string\" && _lastComment) {\n                try {\n                  match = EXTERNAL_SOURCEMAP_REGEX.exec(_lastComment);\n                  inputMapContent = _fs().default.readFileSync(_path().default.resolve(_path().default.dirname(options.filename), match[1]));\n\n                  if (inputMapContent.length > LARGE_INPUT_SOURCEMAP_THRESHOLD) {\n                    debug(\"skip merging input map > 1 MB\");\n                  } else {\n                    inputMap = _convertSourceMap().default.fromJSON(inputMapContent);\n                  }\n                } catch (err) {\n                  debug(\"discarding unknown file input sourcemap\", err);\n                }\n              } else if (_lastComment) {\n                debug(\"discarding un-loadable file input sourcemap\");\n              }\n            }\n          }\n\n          return _context.abrupt(\"return\", new _file.default(options, {\n            code: code,\n            ast: ast,\n            inputMap: inputMap\n          }));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar INLINE_SOURCEMAP_REGEX = /^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/;\nvar EXTERNAL_SOURCEMAP_REGEX = /^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;\n\nfunction extractCommentsFromList(regex, comments, lastComment) {\n  if (comments) {\n    comments = comments.filter(function (_ref) {\n      var value = _ref.value;\n\n      if (regex.test(value)) {\n        lastComment = value;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return [comments, lastComment];\n}\n\nfunction extractComments(regex, ast) {\n  var lastComment = null;\n  t().traverseFast(ast, function (node) {\n    var _extractCommentsFromL = extractCommentsFromList(regex, node.leadingComments, lastComment);\n\n    var _extractCommentsFromL2 = _slicedToArray(_extractCommentsFromL, 2);\n\n    node.leadingComments = _extractCommentsFromL2[0];\n    lastComment = _extractCommentsFromL2[1];\n\n    var _extractCommentsFromL3 = extractCommentsFromList(regex, node.innerComments, lastComment);\n\n    var _extractCommentsFromL4 = _slicedToArray(_extractCommentsFromL3, 2);\n\n    node.innerComments = _extractCommentsFromL4[0];\n    lastComment = _extractCommentsFromL4[1];\n\n    var _extractCommentsFromL5 = extractCommentsFromList(regex, node.trailingComments, lastComment);\n\n    var _extractCommentsFromL6 = _slicedToArray(_extractCommentsFromL5, 2);\n\n    node.trailingComments = _extractCommentsFromL6[0];\n    lastComment = _extractCommentsFromL6[1];\n  });\n  return lastComment;\n}","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/core/lib/transformation/normalize-file.js"],"names":["normalizeFile","Object","defineProperty","exports","value","default","_fs","data","_interopRequireDefault","require","_path","_debug","_cloneDeep","t","_interopRequireWildcard","_convertSourceMap","_file","_parser","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","debug","LARGE_INPUT_SOURCEMAP_THRESHOLD","pluginPasses","options","code","ast","type","file","Error","cloneInputAst","inputMap","inputSourceMap","fromObject","lastComment","extractComments","INLINE_SOURCEMAP_REGEX","fromComment","err","EXTERNAL_SOURCEMAP_REGEX","filename","match","exec","inputMapContent","readFileSync","resolve","dirname","length","fromJSON","extractCommentsFromList","regex","comments","filter","test","traverseFast","node","leadingComments","innerComments","trailingComments"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeFile;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cloneDeep() {\n  const data = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\n  _cloneDeep = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction t() {\n  const data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _convertSourceMap() {\n  const data = _interopRequireDefault(require(\"convert-source-map\"));\n\n  _convertSourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = _interopRequireDefault(require(\"./file/file\"));\n\nvar _parser = _interopRequireDefault(require(\"../parser\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst debug = (0, _debug().default)(\"babel:transform:file\");\nconst LARGE_INPUT_SOURCEMAP_THRESHOLD = 1000000;\n\nfunction* normalizeFile(pluginPasses, options, code, ast) {\n  code = `${code || \"\"}`;\n\n  if (ast) {\n    if (ast.type === \"Program\") {\n      ast = t().file(ast, [], []);\n    } else if (ast.type !== \"File\") {\n      throw new Error(\"AST root must be a Program or File node\");\n    }\n\n    const {\n      cloneInputAst\n    } = options;\n\n    if (cloneInputAst) {\n      ast = (0, _cloneDeep().default)(ast);\n    }\n  } else {\n    ast = yield* (0, _parser.default)(pluginPasses, options, code);\n  }\n\n  let inputMap = null;\n\n  if (options.inputSourceMap !== false) {\n    if (typeof options.inputSourceMap === \"object\") {\n      inputMap = _convertSourceMap().default.fromObject(options.inputSourceMap);\n    }\n\n    if (!inputMap) {\n      const lastComment = extractComments(INLINE_SOURCEMAP_REGEX, ast);\n\n      if (lastComment) {\n        try {\n          inputMap = _convertSourceMap().default.fromComment(lastComment);\n        } catch (err) {\n          debug(\"discarding unknown inline input sourcemap\", err);\n        }\n      }\n    }\n\n    if (!inputMap) {\n      const lastComment = extractComments(EXTERNAL_SOURCEMAP_REGEX, ast);\n\n      if (typeof options.filename === \"string\" && lastComment) {\n        try {\n          const match = EXTERNAL_SOURCEMAP_REGEX.exec(lastComment);\n\n          const inputMapContent = _fs().default.readFileSync(_path().default.resolve(_path().default.dirname(options.filename), match[1]));\n\n          if (inputMapContent.length > LARGE_INPUT_SOURCEMAP_THRESHOLD) {\n            debug(\"skip merging input map > 1 MB\");\n          } else {\n            inputMap = _convertSourceMap().default.fromJSON(inputMapContent);\n          }\n        } catch (err) {\n          debug(\"discarding unknown file input sourcemap\", err);\n        }\n      } else if (lastComment) {\n        debug(\"discarding un-loadable file input sourcemap\");\n      }\n    }\n  }\n\n  return new _file.default(options, {\n    code,\n    ast,\n    inputMap\n  });\n}\n\nconst INLINE_SOURCEMAP_REGEX = /^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/;\nconst EXTERNAL_SOURCEMAP_REGEX = /^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;\n\nfunction extractCommentsFromList(regex, comments, lastComment) {\n  if (comments) {\n    comments = comments.filter(({\n      value\n    }) => {\n      if (regex.test(value)) {\n        lastComment = value;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return [comments, lastComment];\n}\n\nfunction extractComments(regex, ast) {\n  let lastComment = null;\n  t().traverseFast(ast, node => {\n    [node.leadingComments, lastComment] = extractCommentsFromList(regex, node.leadingComments, lastComment);\n    [node.innerComments, lastComment] = extractCommentsFromList(regex, node.innerComments, lastComment);\n    [node.trailingComments, lastComment] = extractCommentsFromList(regex, node.trailingComments, lastComment);\n  });\n  return lastComment;\n}"]},"metadata":{},"sourceType":"script"}