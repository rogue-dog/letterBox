{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\letterBox\\\\src\\\\pages\\\\SmallComponents\\\\Chats.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef } from \"react\";\nimport \"./Chats.css\";\nimport { AppContext } from \"../../initialState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chats = ({\n  messages\n}) => {\n  _s();\n\n  let {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  let user = state.user.phone;\n  let sent = user + \"/\" + state.chattingWith.phone;\n  let recieve = state.chattingWith.phone + \"/\" + user;\n  const divRef = useRef(null);\n  useEffect(() => {\n    if (messages.length > 0) {\n      divRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]); //alert(\"CHat\");\n\n  return messages.map(doc => {\n    let a = 0;\n\n    if (doc.channel == sent) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box-sent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: doc.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: divRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 104\n        }, this)]\n      }, doc['id'], true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box-recieve\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p2\",\n          children: doc.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: divRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 107\n        }, this)]\n      }, doc['id'], true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    }\n  });\n};\n\n_s(Chats, \"BJsCGY15o94KFQtl39Y2+xqkZ+8=\");\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/pages/SmallComponents/Chats.jsx"],"names":["useContext","useEffect","useRef","AppContext","Chats","messages","state","dispatch","user","phone","sent","chattingWith","recieve","divRef","length","current","scrollIntoView","behavior","map","doc","a","channel","content"],"mappings":";;;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5B,MAAI;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBP,UAAU,CAACG,UAAD,CAApC;AACA,MAAIK,IAAI,GAAGF,KAAK,CAACE,IAAN,CAAWC,KAAtB;AACA,MAAIC,IAAI,GAAGF,IAAI,GAAG,GAAP,GAAaF,KAAK,CAACK,YAAN,CAAmBF,KAA3C;AACA,MAAIG,OAAO,GAAGN,KAAK,CAACK,YAAN,CAAmBF,KAAnB,GAA2B,GAA3B,GAAiCD,IAA/C;AAEA,QAAMK,MAAM,GAAGX,MAAM,CAAC,IAAD,CAArB;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,QAAQ,CAACS,MAAT,GAAkB,CAAtB,EAAyB;AACrBD,MAAAA,MAAM,CAACE,OAAP,CAAeC,cAAf,CAA8B;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA9B;AACH;AACJ,GAJQ,EAIN,CAACZ,QAAD,CAJM,CAAT,CAV4B,CAiB5B;;AACA,SAAQA,QAAQ,CAACa,GAAT,CAAcC,GAAD,IAAS;AAC1B,QAAIC,CAAC,GAAG,CAAR;;AACA,QAAID,GAAG,CAACE,OAAJ,IAAeX,IAAnB,EAAyB;AACrB,0BAAQ;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA,gCAAgD;AAAG,UAAA,SAAS,EAAC,IAAb;AAAA,oBAAmBS,GAAG,CAACG;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAhD,eAAmF;AAAK,UAAA,GAAG,EAAET;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAnF;AAAA,SAAUM,GAAG,CAAC,IAAD,CAAb;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFD,MAGK;AACD,0BAAQ;AAAqB,QAAA,SAAS,EAAC,kBAA/B;AAAA,gCAAmD;AAAG,UAAA,SAAS,EAAC,IAAb;AAAA,oBAAmBA,GAAG,CAACG;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAnD,eAAsF;AAAK,UAAA,GAAG,EAAET;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAtF;AAAA,SAAUM,GAAG,CAAC,IAAD,CAAb;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACJ,GARO,CAAR;AASH,CA3BD;;GAAMf,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport \"./Chats.css\";\r\nimport { AppContext } from \"../../initialState\";\r\n\r\n\r\n\r\n\r\nconst Chats = ({ messages }) => {\r\n    let { state, dispatch } = useContext(AppContext);\r\n    let user = state.user.phone;\r\n    let sent = user + \"/\" + state.chattingWith.phone;\r\n    let recieve = state.chattingWith.phone + \"/\" + user;\r\n\r\n    const divRef = useRef(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (messages.length > 0) {\r\n            divRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n\r\n    //alert(\"CHat\");\r\n    return (messages.map((doc) => {\r\n        let a = 0;\r\n        if (doc.channel == sent) {\r\n            return (<div key={doc['id']} className=\"chat-box-sent\" ><p className=\"p1\">{doc.content}</p><div ref={divRef} /></div>)\r\n        }\r\n        else {\r\n            return (<div key={doc['id']} className=\"chat-box-recieve\" ><p className=\"p2\">{doc.content}</p><div ref={divRef} /></div>)\r\n        }\r\n    }));\r\n}\r\n\r\n\r\nexport default Chats;"]},"metadata":{},"sourceType":"module"}