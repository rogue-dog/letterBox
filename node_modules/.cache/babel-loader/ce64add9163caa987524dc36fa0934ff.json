{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar PluginPass = /*#__PURE__*/function () {\n  function PluginPass(file, key, options) {\n    _classCallCheck(this, PluginPass);\n\n    this._map = new Map();\n    this.key = void 0;\n    this.file = void 0;\n    this.opts = void 0;\n    this.cwd = void 0;\n    this.filename = void 0;\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n  }\n\n  _createClass(PluginPass, [{\n    key: \"set\",\n    value: function set(key, val) {\n      this._map.set(key, val);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._map.get(key);\n    }\n  }, {\n    key: \"availableHelper\",\n    value: function availableHelper(name, versionRange) {\n      return this.file.availableHelper(name, versionRange);\n    }\n  }, {\n    key: \"addHelper\",\n    value: function addHelper(name) {\n      return this.file.addHelper(name);\n    }\n  }, {\n    key: \"addImport\",\n    value: function addImport() {\n      return this.file.addImport();\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return this.file.getModuleName();\n    }\n  }, {\n    key: \"buildCodeFrameError\",\n    value: function buildCodeFrameError(node, msg, Error) {\n      return this.file.buildCodeFrameError(node, msg, Error);\n    }\n  }]);\n\n  return PluginPass;\n}();\n\nexports.default = PluginPass;","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/node_modules/@babel/core/lib/transformation/plugin-pass.js"],"names":["Object","defineProperty","exports","value","default","PluginPass","file","key","options","_map","Map","opts","cwd","filename","val","set","get","name","versionRange","availableHelper","addHelper","addImport","getModuleName","node","msg","Error","buildCodeFrameError"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;IAEMC,U;AACJ,sBAAYC,IAAZ,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAAA;;AAC9B,SAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACA,SAAKH,GAAL,GAAW,KAAK,CAAhB;AACA,SAAKD,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKK,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKC,GAAL,GAAW,KAAK,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKN,GAAL,GAAWA,GAAX;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKK,IAAL,GAAYH,OAAO,IAAI,EAAvB;AACA,SAAKI,GAAL,GAAWN,IAAI,CAACK,IAAL,CAAUC,GAArB;AACA,SAAKC,QAAL,GAAgBP,IAAI,CAACK,IAAL,CAAUE,QAA1B;AACD;;;;WAED,aAAIN,GAAJ,EAASO,GAAT,EAAc;AACZ,WAAKL,IAAL,CAAUM,GAAV,CAAcR,GAAd,EAAmBO,GAAnB;AACD;;;WAED,aAAIP,GAAJ,EAAS;AACP,aAAO,KAAKE,IAAL,CAAUO,GAAV,CAAcT,GAAd,CAAP;AACD;;;WAED,yBAAgBU,IAAhB,EAAsBC,YAAtB,EAAoC;AAClC,aAAO,KAAKZ,IAAL,CAAUa,eAAV,CAA0BF,IAA1B,EAAgCC,YAAhC,CAAP;AACD;;;WAED,mBAAUD,IAAV,EAAgB;AACd,aAAO,KAAKX,IAAL,CAAUc,SAAV,CAAoBH,IAApB,CAAP;AACD;;;WAED,qBAAY;AACV,aAAO,KAAKX,IAAL,CAAUe,SAAV,EAAP;AACD;;;WAED,yBAAgB;AACd,aAAO,KAAKf,IAAL,CAAUgB,aAAV,EAAP;AACD;;;WAED,6BAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;AACpC,aAAO,KAAKnB,IAAL,CAAUoB,mBAAV,CAA8BH,IAA9B,EAAoCC,GAApC,EAAyCC,KAAzC,CAAP;AACD;;;;;;AAIHvB,OAAO,CAACE,OAAR,GAAkBC,UAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass PluginPass {\n  constructor(file, key, options) {\n    this._map = new Map();\n    this.key = void 0;\n    this.file = void 0;\n    this.opts = void 0;\n    this.cwd = void 0;\n    this.filename = void 0;\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n  }\n\n  set(key, val) {\n    this._map.set(key, val);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  availableHelper(name, versionRange) {\n    return this.file.availableHelper(name, versionRange);\n  }\n\n  addHelper(name) {\n    return this.file.addHelper(name);\n  }\n\n  addImport() {\n    return this.file.addImport();\n  }\n\n  getModuleName() {\n    return this.file.getModuleName();\n  }\n\n  buildCodeFrameError(node, msg, Error) {\n    return this.file.buildCodeFrameError(node, msg, Error);\n  }\n\n}\n\nexports.default = PluginPass;"]},"metadata":{},"sourceType":"script"}