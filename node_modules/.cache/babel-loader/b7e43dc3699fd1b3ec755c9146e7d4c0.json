{"ast":null,"code":"import _slicedToArray from\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/lenovo/letterBox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{act}from'@testing-library/react';import React from'react';import{useReducer,createContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var AppContext=/*#__PURE__*/createContext({});var intialState={appName:\"letterBox\",user:JSON.parse(localStorage.getItem(\"user-details\")),chattingWith:{name:\"\",phone:\"\"}};var reducer=function reducer(state,action){switch(action.type){case\"setAppName\":return _objectSpread(_objectSpread({},state),{},{appName:action.payload});case\"LoginUser\":var userInfo=action.payload;localStorage.setItem(\"user-details\",JSON.stringify(userInfo));return _objectSpread(_objectSpread({},state),{},{user:userInfo});case\"ChatStarted\":return _objectSpread(_objectSpread({},state),{},{chattingWith:{name:action.payload[0],phone:action.payload[1]}});default:break;}};function AppContextProvider(props){var AppState=_objectSpread({},intialState);var _useReducer=useReducer(reducer,AppState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var value={state:state,dispatch:dispatch};return/*#__PURE__*/_jsx(AppContext.Provider,{value:value,children:props.children});};export{AppContext,AppContextProvider};","map":{"version":3,"sources":["C:/Users/lenovo/letterBox/src/initialState.jsx"],"names":["act","React","useReducer","createContext","AppContext","intialState","appName","user","JSON","parse","localStorage","getItem","chattingWith","name","phone","reducer","state","action","type","payload","userInfo","setItem","stringify","AppContextProvider","props","AppState","dispatch","value","children"],"mappings":"+RAAA,OAASA,GAAT,KAAoB,wBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,aAArB,KAA0C,OAA1C,C,2CAEA,GAAIC,CAAAA,UAAU,cAAGD,aAAa,CAAC,EAAD,CAA9B,CAGA,GAAME,CAAAA,WAAW,CAAG,CAChBC,OAAO,CAAE,WADO,CAEhBC,IAAI,CAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAFU,CAGhBC,YAAY,CAAE,CACVC,IAAI,CAAE,EADI,CAEVC,KAAK,CAAE,EAFG,CAHE,CAApB,CAWA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,YAAL,CAEI,sCAAYF,KAAZ,MAAmBV,OAAO,CAAEW,MAAM,CAACE,OAAnC,GAEJ,IAAK,WAAL,CACI,GAAIC,CAAAA,QAAQ,CAAGH,MAAM,CAACE,OAAtB,CACAT,YAAY,CAACW,OAAb,CAAqB,cAArB,CAAqCb,IAAI,CAACc,SAAL,CAAeF,QAAf,CAArC,EACA,sCACOJ,KADP,MACcT,IAAI,CAAEa,QADpB,GAIJ,IAAK,aAAL,CACI,sCACOJ,KADP,MACcJ,YAAY,CAAE,CACpBC,IAAI,CAAEI,MAAM,CAACE,OAAP,CAAe,CAAf,CADc,CAEpBL,KAAK,CAAEG,MAAM,CAACE,OAAP,CAAe,CAAf,CAFa,CAD5B,GAOJ,QACI,MArBR,CAwBH,CAzBD,CA2BA,QAASI,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CAC/B,GAAIC,CAAAA,QAAQ,kBACLpB,WADK,CAAZ,CAGA,gBAAwBH,UAAU,CAACa,OAAD,CAAUU,QAAV,CAAlC,4CAAKT,KAAL,iBAAYU,QAAZ,iBACA,GAAIC,CAAAA,KAAK,CAAG,CAAEX,KAAK,CAALA,KAAF,CAASU,QAAQ,CAARA,QAAT,CAAZ,CACA,mBACI,KAAC,UAAD,CAAY,QAAZ,EAAqB,KAAK,CAAEC,KAA5B,UAAoCH,KAAK,CAACI,QAA1C,EADJ,CAGH,EACD,OAASxB,UAAT,CAAqBmB,kBAArB","sourcesContent":["import { act } from '@testing-library/react';\r\nimport React from 'react';\r\nimport { useReducer, createContext } from \"react\";\r\n\r\nlet AppContext = createContext({});\r\n\r\n\r\nconst intialState = {\r\n    appName: \"letterBox\",\r\n    user: JSON.parse(localStorage.getItem(\"user-details\")),\r\n    chattingWith: {\r\n        name: \"\",\r\n        phone: \"\"\r\n    }\r\n\r\n\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"setAppName\":\r\n\r\n            return { ...state, appName: action.payload };\r\n\r\n        case \"LoginUser\":\r\n            var userInfo = action.payload;\r\n            localStorage.setItem(\"user-details\", JSON.stringify(userInfo));\r\n            return {\r\n                ...state, user: userInfo\r\n            };\r\n\r\n        case \"ChatStarted\":\r\n            return {\r\n                ...state, chattingWith: {\r\n                    name: action.payload[0],\r\n                    phone: action.payload[1]\r\n                }\r\n            };\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n};\r\n\r\nfunction AppContextProvider(props) {\r\n    var AppState = {\r\n        ...intialState\r\n    };\r\n    let [state, dispatch] = useReducer(reducer, AppState);\r\n    let value = { state, dispatch };\r\n    return (\r\n        <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\r\n    );\r\n};\r\nexport { AppContext, AppContextProvider };"]},"metadata":{},"sourceType":"module"}